{"version":3,"sources":["components/ingredients-category/ingredients-category.module.css","components/modal-overlay/modal-overlay.module.css","components/orders-list/orders-list.module.css","components/burger-constructor/burger-constructor.module.css","reportWebVitals.js","utils/cookie.ts","utils/burger-api.ts","services/middleware/socket-middleware.ts","services/actions/orders.ts","services/actions/feed.ts","services/actions/ingredients.ts","services/reducers/ingredients.ts","services/actions/constructor.ts","services/reducers/constructor.ts","services/actions/order.ts","services/reducers/order.ts","services/reducers/orders.ts","services/reducers/feed.ts","services/actions/user.ts","services/reducers/user.ts","services/reducers/index.ts","services/store.ts","components/app-header/app-header.tsx","components/burger-ingredient/burger-ingredient.tsx","components/ingredients-category/ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.svg","components/order-details/order-details.tsx","components/burger-constructor-element/burger-constructor-element.tsx","components/preloader/preloader.tsx","components/burger-constructor/burger-constructor.tsx","pages/main/main.tsx","pages/register/register.tsx","pages/login/login.tsx","pages/forgot-password/forgot-password.tsx","components/profile-menu/profile-menu.tsx","pages/profile/profile.tsx","components/order-status/order-status.tsx","utils/date-format.ts","components/order-card/order-card.tsx","components/orders-list/orders-list.tsx","pages/profile-orders/profile-orders.tsx","components/protected-route/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","pages/reset-password/reset-password.tsx","components/order-info/order-info.tsx","pages/not-fount-404/not-fount-404.tsx","components/feed-info/feed-info.tsx","pages/feed/feed.tsx","components/app/app.tsx","index.tsx","components/app-header/app-header.module.css","components/ingredient-details/ingredient-details.module.css","components/order-card/order-card.module.css","components/order-info/order-info.module.css","components/app/app.module.css","components/feed-info/feed-info.module.css","components/modal/modal.module.css","components/profile-menu/profile-menu.module.css","pages/feed/feed.module.css","components/burger-ingredient/burger-ingredient.module.css","pages/main/main.module.css","components/burger-ingredients/burger-ingredients.module.css","components/order-details/order-details.module.css","pages/profile/profile.module.css","pages/profile-orders/profile-orders.module.css","pages/common.module.css","components/burger-constructor-element/burger-constructor-element.module.css","components/preloader/preloader.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","path","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","BURGER_API_URL","checkResponse","res","ok","json","err","Promise","reject","refreshToken","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","refreshData","success","setItem","accessToken","fetchWithRefresh","url","options","a","message","authorization","socketMiddleware","wsActions","store","socket","wsInit","wsClose","wsSendMessage","onOpen","onClose","onError","onMessage","next","action","dispatch","type","payload","WebSocket","onopen","event","onerror","onmessage","data","parsedData","parse","timestamp","onclose","close","send","ORDERS_CONNECTION_INIT","ORDERS_CONNECTION_SUCCESS","ORDERS_CONNECTION_ERROR","ORDERS_CONNECTION_CLOSED","ORDERS_CONNECTION_CLOSE","ORDERS_GET_MESSAGE","FEED_CONNECTION_INIT","FEED_CONNECTION_SUCCESS","FEED_CONNECTION_ERROR","FEED_CONNECTION_CLOSED","FEED_CONNECTION_CLOSE","FEED_GET_MESSAGE","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","getIngredients","ingredients","catch","initialState","isLoading","error","CONSTRUCTOR_ADD","CONSTRUCTOR_DELETE","CONSTRUCTOR_REORDER","CONSTRUCTOR_RESET","bun","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","RESET_CREATED_ORDER","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","orderBurger","orderData","order","getOrderByNumber","number","getOrderByNumberApi","newOrderData","isNewOrderLoading","newOrderError","orderByNumber","isOrderByNumberLoading","orderByNumberError","isOpen","orders","total","totalToday","AUTH_CHECKED","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","USER_LOGOUT","logoutUser","clear","alert","registerUser","email","password","user","loginUser","getUser","updateUser","isAuthChecked","registerUserError","registerUserRequest","loginUserError","loginUserRequest","updateUserError","updateUserRequest","getUserError","getUserRequest","combineReducers","state","burgerConstructor","slice","splice","to","from","feed","ordersWsActions","feedWsActions","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","useDispatch","dispatchHook","useSelector","selectorHook","AppHeader","isConstructor","useRouteMatch","exact","isFeed","isProfile","userName","className","styles","header","menu","menu_part_left","link","activeClassName","link_active","logo","link_position_last","BurgerIngredient","ingredient","count","location","useLocation","image","price","_id","useDrag","item","collect","monitor","isDragging","handlerId","getHandlerId","drag","opacity","article","pathname","background","style","ref","img","src","alt","cost","text","React","memo","IngredientsCategory","forwardRef","title","titleId","ingredientsCounters","useMemo","counters","forEach","id","items","map","BurgerIngredients","useState","currentTab","setCurrentTab","useInView","threshold","bunsRef","inViewBuns","mainsRef","inViewFilling","saucesRef","inViewSauces","useEffect","onTabClick","tab","element","getElementById","scrollIntoView","behavior","buns","filter","mains","sauces","burger_ingredients","active","onClick","content","ModalOverlay","overlay","modalRoot","Modal","children","handleEsc","e","key","addEventListener","removeEventListener","ReactDOM","createPortal","modal","button","OrderDetails","orderNumber","doneImg","BurgerConstructorElement","index","useRef","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","current","getBoundingClientRect","clientOffset","getClientOffset","hoverMiddleY","bottom","top","hoverClientY","y","drop","element_fullwidth","thumbnail","handleClose","Preloader","preloader","preloader_circle","BurgerConstructor","history","useHistory","constructorItems","orderRequest","orderModalData","uuid","canDrop","dragItem","isOver","dragBuns","dragIngredients","closeOrderModal","reduce","s","v","burger_constructor","isLocked","noBuns","dragActive","noBunsTop","elements","length","noBunsBottom","size","ing","push","ConstructorPage","containerMain","DndProvider","backend","HTML5Backend","main","Register","setUserName","setEmail","setPassword","container","wrapCenter","form","onSubmit","preventDefault","placeholder","onChange","target","errorText","htmlType","question","Login","ForgotPassword","setError","ProfileMenu","activeLink","Profile","formValue","setFormValue","prevState","isFormChanged","handleInputChange","commonStyles","icon","statusText","pending","done","created","OrderStatus","status","textStyle","color","formatPastTime","isToday","format","locale","ru","isYesterday","formatDistance","now","OrderCard","orderInfo","ingredientsInfo","acc","find","ingredientsToShow","remains","date","createdAt","order_info","String","padStart","order_name","order_content","zIndex","right","img_wrap","image_mobile","order_total","OrdersList","orderByDate","sort","b","ProfileOrder","ProtectedRoute","onlyUnAuth","rest","IngredientDetails","useParams","ingredientData","image_large","calories","proteins","fat","carbohydrates","nutritional_values","nutritional_value","ResetPassword","setToken","removeItem","OrderInfo","Object","values","wrap","list","border","quantity","NotFound404","HalfColumn","textColor","column","list_item","Column","getOrders","FeedInfo","readyOrders","pendingOrders","columns","Feed","columnOrders","columnInfo","App","params","handleModalClose","goBack","finally","app","detailPageWrap","detailHeader","render","StrictMode"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,MAAQ,sC,oBCA1BD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,+B,yCCA5BD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,SAAW,qCAAqC,MAAQ,kCAAkC,KAAO,iCAAiC,KAAO,iCAAiC,OAAS,mCAAmC,UAAY,sCAAsC,aAAe,yCAAyC,WAAa,uCAAuC,QAAU,oCAAoC,kBAAoB,gD,6FCW7fC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oECPP,SAASQ,EAAUC,GACxB,IAAMC,EAAUC,SAASC,OAAOC,MAC9B,IAAIC,OACF,WAEEL,EAAKM,QAAQ,+BAAgC,QAC7C,aAGN,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAO7C,SAASC,EACdT,EACAU,GAEC,IADDC,EACA,uDAD6D,GAOzDC,GALJD,EAAK,aACHE,KAAM,KACHF,IAGWG,QAChB,GAAIF,GAAsB,kBAARA,EAAkB,CAClC,IAAMG,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANN,GACxBA,EAAMD,EAAMG,QAAUC,EAGpBH,GAAOA,aAAeI,OACxBL,EAAMG,QAAUF,EAAIO,eAGtB,IAAIC,EAAgBpB,EAAO,KAD3BU,EAAQW,mBAAmBX,IAE3B,IAAK,IAAMY,KAAYX,EAAO,CAC5BS,GAAiB,KAAOE,EACxB,IAAMC,EAAYZ,EAAMW,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BrB,SAASC,OAASiB,EC1CpB,IAAMI,EAAiB,wCAIjBC,EAAgB,SAAIC,GACxB,OAAOA,EAAIC,GAAKD,EAAIE,OAASF,EAAIE,OAAOnC,MAAK,SAACoC,GAAD,OAASC,QAAQC,OAAOF,OAY1DG,EAAe,WAC1B,OAAOC,MAAM,GAAD,OAAIT,EAAJ,eAAiC,CAC3CU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOC,aAAaC,QAAQ,oBAG7BhD,MAAK,SAACiC,GAAD,OAASD,EAAgCC,MAC9CjC,MAAK,SAACiD,GACL,OAAKA,EAAYC,SAGjBH,aAAaI,QAAQ,eAAgBF,EAAYV,cACjDvB,EAAU,cAAeiC,EAAYG,aAC9BH,GAJEZ,QAAQC,OAAOW,OAUjBI,EAAgB,uCAAG,WAC9BC,EACAC,GAF8B,mBAAAC,EAAA,+EAKVhB,MAAMc,EAAKC,GALD,cAKtBtB,EALsB,gBAMfD,EAAiBC,GANF,mFAQiB,gBAAzC,KAA6BwB,QARL,kCASAlB,IATA,eASpBU,EAToB,OAUtBM,EAAQb,UACTa,EAAQb,QAAsCgB,cAC7CT,EAAYG,aAZU,UAcRZ,MAAMc,EAAKC,GAdH,eAcpBtB,EAdoB,iBAebD,EAAiBC,GAfJ,iCAiBnBI,QAAQC,OAAR,OAjBmB,yDAAH,wDC3BhBqB,EAAmB,SAC9BC,GAEA,OAAO,SAACC,GACN,IAAIC,EAA2B,KAE7BC,EAOEH,EAPFG,OACAC,EAMEJ,EANFI,QACAC,EAKEL,EALFK,cACAC,EAIEN,EAJFM,OACAC,EAGEP,EAHFO,QACAC,EAEER,EAFFQ,QACAC,EACET,EADFS,UAGF,OAAO,SAACC,GAAD,OAAU,SAACC,GAChB,IAAQC,EAAaX,EAAbW,SACAC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QAEVD,IAASV,KACXD,EAAS,IAAIa,UAAUD,IAChBE,OAAS,SAACC,GACfL,EAAS,CAAEC,KAAMP,EAAQQ,QAASG,KAGpCf,EAAOgB,QAAU,SAACD,GAChBL,EAAS,CAAEC,KAAML,EAASM,QAASG,KAGrCf,EAAOiB,UAAY,SAACF,GAClB,IAAQG,EAASH,EAATG,KACFC,EAAarC,KAAKsC,MAAMF,GAC9BR,EAAS,CACPC,KAAMJ,EACNK,QAAS,CACPM,KAAMC,EACNE,WAAW,IAAI5D,MAAOE,UAAY,QAKxCqC,EAAOsB,QAAU,SAACP,GAChBL,EAAS,CAAEC,KAAMN,EAASO,QAASG,MAInCb,GAAWS,IAAST,GAAWF,GACjCA,EAAOuB,QAGLpB,GAAiBQ,IAASR,GAAiBH,GAC7CA,EAAOwB,KAAK1C,KAAKC,UAAU6B,IAG7BJ,EAAKC,OCpEEgB,EAAyB,yBACzBC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAqB,qBCLrBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAyB,yBACzBC,EAAwB,wBACxBC,EAAmB,mBCFnBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAyB,yBAqBzBC,EAAiB,kBAAkC,SAAC9B,GAI/D,OAHAA,EAAS,CACPC,KAAM0B,IJwCD3D,MAAM,GAAD,OAAIT,EAAJ,iBACT/B,MAAK,SAACiC,GAAD,OAASD,EAAoCC,MAClDjC,MAAK,SAACgF,GACL,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EAAKA,KACxB3C,QAAQC,OAAO0C,MIzCvBhF,MAAK,SAACuG,GACL/B,EAAS,CACPC,KAAM2B,EACN1B,QAAS6B,OAGZC,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAM4B,EACN3B,QAAStC,SC3BJqE,EAAqC,CAChDzB,KAAM,GACN0B,WAAW,EACXC,MAAO,M,iBCLIC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAAoB,oBCDpBN,EAAkC,CAC7CO,IAAK,KACLT,YAAa,ICRFU,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAoB,oBACpBC,GAAmB,mBA6CnBC,GACX,SAACC,GAAD,OACA,SAACjD,GAIC,OAHAA,EAAS,CACPC,KAAMwC,KRmBgBjC,EQjBFyC,ERkBjBpE,EAAgB,UAAuBtB,EAAvB,WAAgD,CACrEU,OAAQ,OACRC,QAAS,CACP,eAAgB,iCAChBgB,cAAepD,EAAU,gBAE3BqC,KAAMC,KAAKC,UAAU,CACnB0D,YAAavB,MAEdhF,MAAK,SAACgF,GACP,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EACnB3C,QAAQC,OAAO0C,OQ5BnBhF,MAAK,SAACiC,GACLuC,EAAS,CACPC,KAAMyC,EACNxC,QAASzC,EAAIyF,QAEflD,EAAS,CACPC,KAAMsC,OAGTP,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAM0C,EACNzC,QAAStC,ORIQ,IAAC4C,IQCf2C,GACX,SAACC,GAAD,OACA,SAACpD,GAIC,OAHAA,EAAS,CACPC,KAAM4C,IReoB,SAACO,GAC/B,OAAOpF,MAAM,GAAD,OAAIT,EAAJ,mBAA6B6F,GAAU,CACjDnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAEjB1C,MAAK,SAACiC,GAAD,OAASD,EAA8BC,MQnBtC4F,CAAoBD,GACxB5H,MAAK,SAACiC,GACLuC,EAAS,CACPC,KAAM6C,EACN5C,QAASzC,OAGZuE,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAM8C,GACN7C,QAAStC,SC7ENqE,GAA4B,CACvCqB,aAAc,KACdC,mBAAmB,EACnBC,cAAe,KAEfC,cAAe,KACfC,wBAAwB,EACxBC,mBAAoB,MCdT1B,GAA6B,CACxCzB,KAAM,GACNoD,QAAQ,EACRzB,MAAO,MCDIF,GAA2B,CACtC4B,OAAQ,GACRC,MAAO,EACPC,WAAY,EACZH,QAAQ,EACRzB,MAAO,MCXI6B,GAAe,eACfC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAc,cA8FdC,GAAa,kBAAkC,SAAC9E,GAC3D,OZ2FOhC,MAAM,GAAD,OAAIT,EAAJ,gBAAkC,CAC5CU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOC,aAAaC,QAAQ,oBAE7BhD,MAAK,SAACiC,GAAD,OAASD,EAAmCC,MYlGjDjC,MAAK,WACJ+C,aAAawG,QbzEjBvI,Ea0EiB,cb1ED,GAAI,CAAEK,SAAU,Ia2E5BmD,EAAS,CAAEC,KAAM4E,QAElB7C,OAAM,WACLgD,MAAM,+IAICC,GACX,SAACC,EAAenJ,EAAcoJ,GAA9B,OACA,SAACnF,GAIC,OAHAA,EAAS,CACPC,KAAMgE,MZXiBzD,EYaF,CAAE0E,QAAOnJ,OAAMoJ,YZZjCnH,MAAM,GAAD,OAAIT,EAAJ,kBAAoC,CAC9CU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUmC,KAEpBhF,MAAK,SAACiC,GAAD,OAASD,EAA6BC,MAC3CjC,MAAK,SAACgF,GACL,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EACnB3C,QAAQC,OAAO0C,OYGrBhF,MAAK,SAACiC,GACLjB,EAAU,cAAeiB,EAAImB,aAC7BL,aAAaI,QAAQ,eAAgBlB,EAAIM,cACzCiC,EAAS,CACPC,KAAMiE,GACNhE,QAASzC,EAAI2H,UAGhBpD,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAMkE,GACNjE,QAAStC,EAAIqB,aZzBK,IAACuB,IY8BhB6E,GACX,SAACH,EAAeC,GAAhB,OACA,SAACnF,GAIC,OAHAA,EAAS,CACPC,KAAMmE,MZdc5D,EYgBF,CAAE0E,QAAOC,YZfxBnH,MAAM,GAAD,OAAIT,EAAJ,eAAiC,CAC3CU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUmC,KAEpBhF,MAAK,SAACiC,GAAD,OAASD,EAA6BC,MAC3CjC,MAAK,SAACgF,GACL,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EACnB3C,QAAQC,OAAO0C,OYMrBhF,MAAK,SAACiC,GACLjB,EAAU,cAAeiB,EAAImB,aAC7BL,aAAaI,QAAQ,eAAgBlB,EAAIM,cACzCiC,EAAS,CACPC,KAAMoE,GACNnE,QAASzC,EAAI2H,UAGhBpD,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAMqE,GACNpE,QAAStC,EAAIqB,aZ5BE,IAACuB,IYiCb8E,GAAU,kBAAkC,SAACtF,GAIxD,OAHAA,EAAS,CACPC,KAAMsE,KZaD1F,EAAgB,UAAmBtB,EAAnB,cAA+C,CACpEW,QAAS,CACPgB,cAAepD,EAAU,kBYZ1BN,MAAK,SAACiC,GACLuC,EAAS,CACPC,KAAMuE,GACNtE,QAASzC,EAAI2H,UAGhBpD,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAMwE,GACNvE,QAAStC,EAAIqB,eAKRsG,GACX,SAAC/E,GAAD,OACA,SAACR,GAIC,OAHAA,EAAS,CACPC,KAAMyE,MZDeU,EYGF5E,EZFhB3B,EAAgB,UAAmBtB,EAAnB,cAA+C,CACpEU,OAAQ,QACRC,QAAS,CACP,eAAgB,iCAChBgB,cAAepD,EAAU,gBAE3BqC,KAAMC,KAAKC,UAAU+G,MYHlB5J,MAAK,SAACiC,GACLuC,EAAS,CACPC,KAAM0E,GACNzE,QAASzC,EAAI2H,UAGhBpD,OAAM,SAACpE,GACNoC,EAAS,CACPC,KAAM2E,GACN1E,QAAStC,EAAIqB,aZbG,IAACmG,IavKdnD,GAA2B,CACtCuD,eAAe,EACfhF,KAAM,KACNiF,kBAAmB,KACnBC,qBAAqB,EACrBC,eAAgB,KAChBC,kBAAkB,EAClBC,gBAAiB,KACjBC,mBAAmB,EACnBC,aAAc,KACdC,gBAAgB,GClCHC,6BAAgB,CAC7BlE,YTYgC,WAGN,IAF1BmE,EAEyB,uDAFjBjE,EACRlC,EACyB,uCACzB,OAAQA,EAAOE,MACb,KAAK0B,EACH,OAAO,2BACFuE,GADL,IAEEhE,WAAW,EACXC,MAAO,OAGX,KAAKP,EACH,OAAO,2BACFsE,GADL,IAEE1F,KAAMT,EAAOG,QACbgC,WAAW,EACXC,MAAO,OAGX,KAAKN,EACH,OAAO,2BACFqE,GADL,IAEEhE,WAAW,EACXC,MAAOpC,EAAOG,UAGlB,QACE,OAAOgG,ISvCXC,kBPUgC,WAGT,IAFvBD,EAEsB,uDAFdjE,EACRlC,EACsB,uCACtB,OAAQA,EAAOE,MACb,KAAKmC,EACH,MAA4B,QAAxBrC,EAAOG,QAAQD,KACV,2BAAKiG,GAAZ,IAAmB1D,IAAKzC,EAAOG,UAE1B,2BACFgG,GADL,IAEEnE,YAAY,GAAD,mBAAMmE,EAAMnE,aAAZ,CAAyBhC,EAAOG,YAG/C,KAAKmC,EACH,OAAO,2BACF6D,GADL,IAEEnE,YAAY,GAAD,mBACNmE,EAAMnE,YAAYqE,MAAM,EAAGrG,EAAOG,UAD5B,YAENgG,EAAMnE,YAAYqE,MAAMrG,EAAOG,QAAU,OAIlD,KAAKoC,EACH,IAAMP,EAAW,YAAOmE,EAAMnE,aAM9B,OALAA,EAAYsE,OACVtG,EAAOG,QAAQoG,GACf,EACAvE,EAAYsE,OAAOtG,EAAOG,QAAQqG,KAAM,GAAG,IAEtC,2BACFL,GADL,IAEEnE,gBAGJ,KAAKQ,EACH,OAAON,EAET,QACE,OAAOiE,IOhDXhD,MLsB0B,WAGT,IAFjBgD,EAEgB,uDAFRjE,GACRlC,EACgB,uCAChB,OAAQA,EAAOE,MACb,KAAKwC,EACH,OAAO,2BACFyD,GADL,IAEE3C,mBAAmB,EACnBC,cAAe,OAGnB,KAAKd,EACH,OAAO,2BACFwD,GADL,IAEE5C,aAAcvD,EAAOG,QACrBqD,mBAAmB,EACnBC,cAAe,OAGnB,KAAKb,EACH,OAAO,2BACFuD,GADL,IAEE3C,mBAAmB,EACnBC,cAAezD,EAAOG,UAG1B,KAAK0C,EACH,OAAO,2BACFsD,GADL,IAEE5C,aAAc,OAGlB,KAAKT,EACH,OAAO,2BACFqD,GADL,IAEExC,wBAAwB,EACxBC,mBAAoB,OAGxB,KAAKb,EACH,OAAO,2BACFoD,GADL,IAEEzC,cAAe1D,EAAOG,QAAQ2D,OAAO,GACrCH,wBAAwB,EACxBC,mBAAoB,OAGxB,KAAKZ,GACH,OAAO,2BACFmD,GADL,IAEExC,wBAAwB,EACxBC,mBAAoB5D,EAAOG,UAG/B,QACE,OAAOgG,IK7EXrC,OJU2B,WAGT,IAFlBqC,EAEiB,uDAFTjE,GACRlC,EACiB,uCACjB,OAAQA,EAAOE,MACb,KAAKe,EACH,OAAO,2BACFkF,GADL,IAEEtC,QAAQ,EACRzB,MAAO,OAGX,KAAKlB,EACH,OAAO,2BACFiF,GADL,IAEE/D,MAAOpC,EAAOG,UAGlB,KAAKgB,EACH,OAAO,2BACFgF,GADL,IAEEtC,QAAQ,IAGZ,KAAKxC,EACH,OAAO,2BACF8E,GADL,IAEE1F,KAAMT,EAAOG,QAAQM,KAAKqD,SAG9B,QACE,OAAOqC,IIxCXM,KHayB,WAGT,IAFhBN,EAEe,uDAFPjE,GACRlC,EACe,uCACf,OAAQA,EAAOE,MACb,KAAKqB,EACH,OAAO,2BACF4E,GADL,IAEEtC,QAAQ,EACRzB,MAAO,OAGX,KAAKZ,EACH,OAAO,2BACF2E,GADL,IAEE/D,MAAOpC,EAAOG,UAGlB,KAAKsB,EACH,OAAO,2BACF0E,GADL,IAEEtC,QAAQ,IAGZ,KAAKlC,EACH,OAAO,2BACFwE,GADL,IAEErC,OAAQ9D,EAAOG,QAAQM,KAAKqD,OAC5BC,MAAO/D,EAAOG,QAAQM,KAAKsD,MAC3BC,WAAYhE,EAAOG,QAAQM,KAAKuD,aAGpC,QACE,OAAOmC,IG7CXd,KD+ByB,WAGT,IAFhBc,EAEe,uDAFPjE,GACRlC,EACe,uCACf,OAAQA,EAAOE,MACb,KAAK+D,GACH,OAAO,2BACFkC,GADL,IAEEV,eAAe,IAGnB,KAAKX,GACH,OAAO,2BACFqB,GADL,IAEE1F,KAAM,OAGV,KAAKyD,GACH,OAAO,2BACFiC,GADL,IAEER,qBAAqB,EACrBD,kBAAmB,OAGvB,KAAKvB,GACH,OAAO,2BACFgC,GADL,IAEER,qBAAqB,EACrBlF,KAAMT,EAAOG,QACbsF,eAAe,IAGnB,KAAKrB,GACH,OAAO,2BACF+B,GADL,IAEER,qBAAqB,EACrBD,kBAAmB1F,EAAOG,UAG9B,KAAKkE,GACH,OAAO,2BACF8B,GADL,IAEEN,kBAAkB,EAClBD,eAAgB,OAGpB,KAAKtB,GACH,OAAO,2BACF6B,GADL,IAEEN,kBAAkB,EAClBpF,KAAMT,EAAOG,QACbsF,eAAe,IAGnB,KAAKlB,GACH,OAAO,2BACF4B,GADL,IAEEN,kBAAkB,EAClBD,eAAgB5F,EAAOG,UAG3B,KAAKsE,GACH,OAAO,2BACF0B,GADL,IAEEF,gBAAgB,EAChBxF,KAAMT,EAAOG,UAGjB,KAAKuE,GACH,OAAO,2BACFyB,GADL,IAEEF,gBAAgB,EAChBD,aAAchG,EAAOG,UAGzB,KAAKqE,GACH,OAAO,2BACF2B,GADL,IAEEF,gBAAgB,EAChBD,aAAc,OAGlB,KAAKrB,GACH,OAAO,2BACFwB,GADL,IAEEJ,mBAAmB,EACnBD,gBAAiB,OAGrB,KAAKlB,GACH,OAAO,2BACFuB,GADL,IAEEJ,mBAAmB,EACnBtF,KAAMT,EAAOG,UAGjB,KAAK0E,GACH,OAAO,2BACFsB,GADL,IAEEJ,mBAAmB,EACnBD,gBAAiB9F,EAAOG,UAG5B,QACE,OAAOgG,MEhHPO,GAAkB,CACtBlH,OAAQwB,EACRvB,QAAS2B,EACTzB,OAAQsB,EACRrB,QAASuB,EACTtB,QAASqB,EACTpB,UAAWuB,GAGPsF,GAAgB,CACpBnH,OAAQ8B,EACR7B,QAASiC,EACT/B,OAAQ4B,EACR3B,QAAS6B,EACT5B,QAAS2B,EACT1B,UAAW6B,GAGPrC,GAAQsH,sBACZC,GACAC,8BACEC,0BACEC,IACA5H,EAAiBsH,IACjBtH,EAAiBuH,OA+BVM,GAAc,kBAAMC,eACpBC,GAA+CC,IAE7C9H,M,gEC1BA+H,GAzDG,WAChB,IAAMC,IAAkBC,aAAc,CAAE1K,KAAM,IAAK2K,OAAO,IACpDC,IAAWF,aAAc,SACzBG,IAAcH,aAAc,YAI5BI,EAAWR,IAAY,SAAChB,GAAD,uBAAWA,EAAMd,KAAK5E,YAAtB,aAAW,EAAiBzE,QAEzD,OACE,yBAAQ4L,UAAWC,KAAOC,OAA1B,SACE,uBAAKF,UAAS,UAAKC,KAAOE,KAAZ,cAAd,UACE,uBAAKH,UAAWC,KAAOG,eAAvB,UACE,gBAAC,IAAD,CACEzB,GAAG,IACHqB,UAAWC,KAAOI,KAClBC,gBAAiBL,KAAOM,YACxBX,OAAK,EAJP,UAME,eAAC,cAAD,CAAYtH,KAAMoH,EAAgB,UAAY,cAC9C,oBACEM,UAAU,mCACV,UAAQ,gBAFV,mFAOF,gBAAC,IAAD,CACErB,GAAG,QACHqB,UAAS,UAAKC,KAAOI,KAAZ,UACTC,gBAAiBL,KAAOM,YAH1B,UAKE,eAAC,YAAD,CAAUjI,KAAMuH,EAAS,UAAY,cACrC,oBAAGG,UAAU,mCAAb,6FAGJ,sBAAKA,UAAWC,KAAOO,KAAvB,SACE,eAAC,QAAD,MAEF,gBAAC,IAAD,CACE7B,GAAG,WACHqB,UAAS,UAAKC,KAAOI,KAAZ,YAAoBJ,KAAOQ,oBACpCH,gBAAiBL,KAAOM,YAH1B,UAKE,eAAC,eAAD,CAAajI,KAAMwH,EAAY,UAAY,cAC3C,oBACEE,UAAU,mCACV,UAAQ,eAFV,SAIGD,GAAY,6F,gIC5CnBW,GAAqD,SAAC,GAGrD,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,MAEMC,EAAWC,eACTC,EAA4BJ,EAA5BI,MAAOC,EAAqBL,EAArBK,MAAO5M,EAAcuM,EAAdvM,KAAM6M,EAAQN,EAARM,IAE5B,EAA+BC,cAAQ,iBAAO,CAC5C5I,KAAM,iBACN6I,KAAMR,EAENS,QAAS,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQC,aACpBC,UAAWF,EAAQG,qBANvB,oBAASF,EAAT,KAASA,WAAcG,EAAvB,KASMC,EAAUJ,EAAa,GAAM,EAEnC,OACE,gBAAC,IAAD,CACEtB,UAAWC,KAAO0B,QAClBhD,GAAI,CACFiD,SAAS,gBAAD,OAAkBX,GAC1B1C,MAAO,CAAEsD,WAAYhB,IAEvBiB,MAAO,CAAEJ,WACTK,IAAKN,EAPP,UASGb,GAAS,eAAC,WAAD,CAASA,MAAOA,IAC1B,sBAAKZ,UAAWC,KAAO+B,IAAKC,IAAKlB,EAAOmB,IAAI,yHAC5C,uBAAKlC,UAAS,UAAKC,KAAOkC,KAAZ,cAAd,UACE,oBAAGnC,UAAU,qCAAb,SAAmDgB,IACnD,eAAC,gBAAD,CAAc1I,KAAK,eAErB,oBAAG0H,UAAS,sCAAiCC,KAAOmC,MAApD,SAA6DhO,QAMpDiO,OAAMC,KAAK5B,IC1CpB6B,GAAsBF,IAAMG,YAGhC,WAAkCT,GAAS,IAAxCU,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAAStI,EAAuB,EAAvBA,YACboE,EAAoBe,IAAY,SAAChB,GAAD,OAAWA,EAAMC,qBAGjDmE,EAAsBC,mBAAQ,WAClC,IAAQ/H,EAAqB2D,EAArB3D,IAAKT,EAAgBoE,EAAhBpE,YACPyI,EAAsC,GAM5C,OALAzI,EAAY0I,SAAQ,SAACnC,GACdkC,EAASlC,EAAWM,OAAM4B,EAASlC,EAAWM,KAAO,GAC1D4B,EAASlC,EAAWM,UAElBpG,IAAKgI,EAAShI,EAAIoG,KAAO,GACtB4B,IACN,CAACrE,IAEJ,OACE,uCACE,qBAAIwB,UAAU,wCAAwC+C,GAAIL,EAA1D,SACGD,IAEH,sBAAKzC,UAAWC,KAAO+C,MAAOjB,IAAKA,EAAnC,SACG3H,EAAY6I,KAAI,SAACtC,GAChB,OACE,eAAC,GAAD,CACEA,WAAYA,EAEZC,MAAO+B,EAAoBhC,EAAWM,MADjCN,EAAWM,gBAWfoB,OAAMC,KAAKC,ICyDXW,GArGW,WACxB,MAAoCb,IAAMc,SAAS,QAAnD,oBAAOC,EAAP,KAAmBC,EAAnB,KAEMjJ,EAAcmF,IAAY,SAAChB,GAAD,OAAWA,EAAMnE,YAAYvB,QAE7D,EAA8ByK,aAAU,CACtCC,UAAW,IADb,oBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAAkCH,aAAU,CAC1CC,UAAW,IADb,oBAAOG,EAAP,KAAiBC,EAAjB,KAGA,EAAkCL,aAAU,CAC1CC,UAAW,IADb,oBAAOK,EAAP,KAAkBC,EAAlB,KAIAxB,IAAMyB,WAAU,WACVL,EACFJ,EAAc,QACLQ,EACTR,EAAc,UACLM,GACTN,EAAc,WAEf,CAACI,EAAYE,EAAeE,IAG/B,IAAME,EAAa,SAACC,GAClBX,EAAcW,GACd,IAAMC,EAAU3P,SAAS4P,eAAeF,GACpCC,GAASA,EAAQE,eAAe,CAAEC,SAAU,YAG5CC,EAAOzB,mBACX,kBAAMxI,EAAYkK,QAAO,SAACnD,GAAD,MAAwB,QAAdA,EAAK7I,UACxC,CAAC8B,IAGGmK,EAAQ3B,mBACZ,kBAAMxI,EAAYkK,QAAO,SAACnD,GAAD,MAAwB,SAAdA,EAAK7I,UACxC,CAAC8B,IAGGoK,EAAS5B,mBACb,kBAAMxI,EAAYkK,QAAO,SAACnD,GAAD,MAAwB,UAAdA,EAAK7I,UACxC,CAAC8B,IAGH,OACE,qCACE,2BAAS4F,UAAWC,KAAOwE,mBAA3B,UACE,+BACE,sBAAIzE,UAAWC,KAAOE,KAAtB,UACE,eAAC,OAAD,CACErL,MAAM,OACN4P,OAAuB,SAAftB,EACRuB,QAASZ,EAHX,4CAOA,eAAC,OAAD,CACEjP,MAAM,QACN4P,OAAuB,UAAftB,EACRuB,QAASZ,EAHX,wDAOA,eAAC,OAAD,CACEjP,MAAM,SACN4P,OAAuB,WAAftB,EACRuB,QAASZ,EAHX,iDASJ,uBAAK/D,UAAWC,KAAO2E,QAAS,UAAQ,cAAxC,UACE,eAAC,GAAD,CACEnC,MAAM,iCACNC,QAAQ,OACRtI,YAAaiK,EACbtC,IAAKyB,IAEP,eAAC,GAAD,CACEf,MAAM,6CACNC,QAAQ,QACRtI,YAAamK,EACbxC,IAAK2B,IAEP,eAAC,GAAD,CACEjB,MAAM,iCACNC,QAAQ,SACRtI,YAAaoK,EACbzC,IAAK6B,a,uECrGJiB,GAAe,SAAC,GAA0C,IAAxCF,EAAuC,EAAvCA,QAC7B,OAAO,sBAAK3E,UAAWC,KAAO6E,QAASH,QAASA,EAAS,UAAQ,mBCK7DI,GAAYzQ,SAAS4P,eAAe,UAsC3Bc,GA/BsB,SAAC,GAAkC,IAAhCvC,EAA+B,EAA/BA,MAAOzK,EAAwB,EAAxBA,QAASiN,EAAe,EAAfA,SAYtD,OAXA5C,IAAMyB,WAAU,WACd,IAAMoB,EAAY,SAACC,GACP,WAAVA,EAAEC,KAAoBpN,KAIxB,OADA1D,SAAS+Q,iBAAiB,UAAWH,GAC9B,WACL5Q,SAASgR,oBAAoB,UAAWJ,MAEzC,CAAClN,IAEGuN,IAASC,aACd,uCACE,uBAAKxF,UAAWC,KAAOwF,MAAvB,UACE,uBAAKzF,UAAWC,KAAOC,OAAvB,UACE,qBAAIF,UAAS,UAAKC,KAAOwC,MAAZ,8BAAb,SACGA,IAEH,yBAAQzC,UAAWC,KAAOyF,OAAQpN,KAAK,SAAS,aAAW,6CAA3D,SACE,eAAC,aAAD,CAAWA,KAAK,UAAUqM,QAAS3M,SAGvC,sBAAKgI,UAAWC,KAAO2E,QAAvB,SAAiCK,OAEnC,eAAC,GAAD,CAAcN,QAAS3M,OAEzB+M,K,oBC1CW,OAA0B,iCCgC1BY,GAzBoC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpD,OACE,uCACE,qBACE5F,UAAS,UAAKC,KAAOwC,MAAZ,0CACT,UAAQ,eAFV,SAIGmD,IAEH,oBAAG5F,UAAU,6BAAb,iIACA,sBACEA,UAAWC,KAAO+B,IAClBC,IAAK4D,GACL3D,IAAI,wJAEN,oBAAGlC,UAAU,mCAAb,qJAGA,oBAAGA,UAAS,UAAKC,KAAOmC,KAAZ,gCAAZ,gQ,oBCJA0D,GAAoE,SAAC,GAGpE,IAFLnF,EAEI,EAFJA,WACAoF,EACI,EADJA,MAEM1N,EAAWgH,KAEX0C,EAAMiE,iBAAsB,MAClC,EAA8BC,aAAQ,CACpCC,OAAQ,CAAC,mBACT9E,QAFoC,SAE5BC,GACN,MAAO,CACLE,UAAWF,EAAQG,iBAGvB2E,MAPoC,SAQlChF,EAIAE,GACC,IAAD,EACM+E,EAAYjF,EAAK4E,MACjBM,EAAaN,EACnB,GAAIK,IAAcC,EAAlB,CAGA,IAAMC,EAAiB,UAAGvE,EAAIwE,eAAP,aAAG,EAAaC,wBACjCC,EAAepF,EAAQqF,kBAC7B,GAAKJ,GAAsBG,EAA3B,CACA,IAAME,GACHL,EAAkBM,OAASN,EAAkBO,KAAO,EAEjDC,EAAeL,EAAaM,EAAIT,EAAkBO,IACpDT,EAAYC,GAAcS,EAAeH,GAGzCP,EAAYC,GAAcS,EAAeH,IAI7CtO,EAAS,CACPC,KAAMqC,EACNpC,QAAS,CACPqG,KAAMwH,EACNzH,GAAI0H,KAGRlF,EAAK4E,MAAQM,QAxCjB,oBAAS9E,EAAT,KAASA,UAAayF,EAAtB,KA2CA,EAA+B9F,aAAQ,CACrC5I,KAAM,kBACN6I,KAAM,WACJ,MAAO,CAAER,aAAYoF,UAEvB3E,QAAS,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQC,iBANxB,oBASMI,EATN,KAASJ,WASoB,EAAI,EAGjC,OAFAG,EAVA,MAUKuF,EAAKjF,IAGR,sBACE/B,UAAS,UAAKC,KAAOgE,QAAZ,cACTnC,MAAO,CAAEJ,WACT,kBAAiBH,EACjBQ,IAAKA,EAJP,UAME,eAAC,YAAD,CAAUzJ,KAAK,YACf,sBAAK0H,UAAS,UAAKC,KAAOgH,kBAAZ,SAAd,SACE,eAAC,sBAAD,CACE7E,KAAMzB,EAAWvM,KACjB4M,MAAOL,EAAWK,MAClBkG,UAAWvG,EAAWI,MACtBoG,YAAa,kBACX9O,EAAS,CACPC,KAAMoC,EACNnC,QAASwN,aASR1D,OAAMC,KAAKwD,I,oBClGXsB,GARG,WAChB,OACE,sBAAKpH,UAAWC,KAAOoH,UAAvB,SACE,sBAAKrH,UAAWC,KAAOqH,sBCyKdC,GAzJW,WACxB,IAAMC,EAAUC,eACVpP,EAAWgH,KACXqI,EAAmBnI,IAAY,SAAChB,GAAD,OAAWA,EAAMC,qBAChDmJ,EAAepI,IAAY,SAAChB,GAAD,OAAWA,EAAMhD,MAAMK,qBAClDgM,EAAiBrI,IAAY,SAAChB,GAAD,OAAWA,EAAMhD,MAAMI,gBACpD8B,EAAO8B,IAAY,SAAChB,GAAD,OAAWA,EAAMd,KAAK5E,QAE/C,EAAsCoN,cAAQ,iBAAO,CACnDC,OAAQ,iBACRc,KAAM,SAAC7F,GAAD,OAAuB9I,GpBgB/BsI,EoBhByDQ,EpBkBlD,CACL7I,KAAMmC,EACNlC,QAAQ,2BACHoI,GADE,IAELoC,GAAI8E,mBAPsB,IAC9BlH,GoBfES,QAAS,SAACC,GAAD,MAAc,CACrByG,QAASzG,EAAQyG,UACjBC,SAAU1G,EAAQxK,UAClBmR,OAAQ3G,EAAQ2G,eANpB,2BAASF,EAAT,EAASA,QAASC,EAAlB,EAAkBA,SAAYf,EAA9B,KAUMiB,EAAWH,GAAWC,GAA8B,QAAlBA,EAASzP,KAC3C4P,EAAkBJ,GAAWC,GAA8B,QAAlBA,EAASzP,KAkBlD6P,EAAkB,kBAAM9P,EAAS,CAAEC,KAAM2C,KAOzC+F,EAAQ4B,mBAAQ,WACpB,OACG8E,EAAiB7M,IAAmC,EAA7B6M,EAAiB7M,IAAImG,MAAY,GACzD0G,EAAiBtN,YAAYgO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEtH,QAAO,KAE5D,CAAC0G,IAEJ,OACE,2BACE1H,UAAWC,KAAOsI,mBAClBxG,IAAKiF,EACL,UAAQ,cAHV,UAKGU,EAAiB7M,IAChB,sBACEmF,UAAS,UAAKC,KAAOgE,QAAZ,cACT,UAAQ,oBAFV,SAIE,eAAC,sBAAD,CACE3L,KAAK,MACLkQ,UAAU,EACVpG,KAAI,UAAKsF,EAAiB7M,IAAIzG,KAA1B,+BACJ4M,MAAO0G,EAAiB7M,IAAImG,MAC5BkG,UAAWQ,EAAiB7M,IAAIkG,UAIpC,sBACEf,UAAS,UAAKC,KAAOwI,OAAZ,YAAsBR,GAAYhI,KAAOyI,WAAzC,YACPzI,KAAO0I,UADA,+CADX,6FAQF,qBAAI3I,UAAWC,KAAO2I,SAAU,UAAQ,0BAAxC,SACGlB,EAAiBtN,YAAYyO,OAAS,EACrCnB,EAAiBtN,YAAY6I,KAAI,SAAC9B,EAAM4E,GACtC,OACE,eAAC,GAAD,CACEpF,WAAYQ,EACZ4E,MAAOA,GACF5E,EAAK4B,OAKhB,sBACE/C,UAAS,UAAKC,KAAOwI,OAAZ,YACPP,GAAmBjI,KAAOyI,WADnB,+CADX,2GASHhB,EAAiB7M,IAChB,sBACEmF,UAAS,UAAKC,KAAOgE,QAAZ,cACT,UAAQ,oBAFV,SAIE,eAAC,sBAAD,CACE3L,KAAK,SACLkQ,UAAU,EACVpG,KAAI,UAAKsF,EAAiB7M,IAAIzG,KAA1B,yBACJ4M,MAAO0G,EAAiB7M,IAAImG,MAC5BkG,UAAWQ,EAAiB7M,IAAIkG,UAIpC,sBACEf,UAAS,UAAKC,KAAOwI,OAAZ,YAAsBR,GAAYhI,KAAOyI,WAAzC,YACPzI,KAAO6I,aADA,+CADX,6FAQF,uBAAK9I,UAAS,UAAKC,KAAO9D,MAAZ,eAAgC,UAAQ,aAAtD,UACE,uBAAK6D,UAAS,UAAKC,KAAOkC,KAAZ,UAAd,UACE,oBAAGnC,UAAS,eAAUC,KAAOmC,KAAjB,SAAZ,SAA2CpB,IAC3C,eAAC,gBAAD,CAAc1I,KAAK,eAErB,eAAC,UAAD,CACEA,KAAK,UACLyQ,KAAK,QACL9D,SAAS,kFACTN,QA9Ga,WACdlH,EAKAiK,EAAiB7M,MAAO8M,GAE7BtP,EACEgD,GAAY,CACVqM,EAAiB7M,IAAIoG,KADZ,mBAENyG,EAAiBtN,YAAY6I,KAAI,SAAC+F,GAAD,OAASA,EAAI/H,QAFxC,CAGTyG,EAAiB7M,IAAIoG,QAVvBuG,EAAQyB,KAAK,gBAgHZtB,GACC,eAAC,GAAD,CAAO3P,QAASmQ,EAAiB1F,MAAO,2FAAxC,SACE,eAAC,GAAD,MAIHmF,GACC,eAAC,GAAD,CACE5P,QAASmQ,EACT1F,MAAOkF,EAAe,2FAAuB,GAF/C,SAIE,eAAC,GAAD,CAAc/B,YAAagC,EAAenM,eCrIrCyN,GAxBS,WAKtB,OAJ6B3J,IAC3B,SAAChB,GAAD,OAAWA,EAAMnE,YAAYG,aAItB,eAAC,GAAD,IAIP,wBAAMyF,UAAWC,KAAOkJ,cAAxB,UACE,qBAAInJ,UAAS,UAAKC,KAAOwC,MAAZ,yCAAb,mGAGA,eAAC2G,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACE,uBAAKtJ,UAAS,UAAKC,KAAOsJ,MAA1B,UACE,eAAC,GAAD,IACA,eAAC,GAAD,a,mBCgEKC,GA9EE,WACf,IAAMnR,EAAWgH,KACjB,EAAgC8D,mBAAS,IAAzC,oBAAOpD,EAAP,KAAiB0J,EAAjB,KACA,EAA0BtG,mBAAS,IAAnC,oBAAO5F,EAAP,KAAcmM,EAAd,KACA,EAAgCvG,mBAAS,IAAzC,oBAAO3F,EAAP,KAAiBmM,EAAjB,KAEMnP,EAAQ+E,IAAY,SAAChB,GAAD,OAAWA,EAAMd,KAAKK,qBAUhD,OACE,uBAAMkC,UAAWC,KAAO2J,UAAxB,SACE,uBAAK5J,UAAS,eAAUC,KAAO4J,YAA/B,UACE,qBAAI7J,UAAU,kCAAd,gFACA,wBACEA,UAAS,gBAAWC,KAAO6J,MAC3B1V,KAAK,WACL2V,SAfa,SAAC5E,GACpBA,EAAE6E,iBACF3R,EAASiF,GAAaC,EAAOwC,EAAUvC,KAUnC,UAKE,sBAAKwC,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAK,OACL2R,YAAY,qBACZC,SAAU,SAAC/E,GAAD,OAAOsE,EAAYtE,EAAEgF,OAAOrV,QACtCA,MAAOiL,EACP3L,KAAK,OACLoG,OAAO,EACP4P,UAAU,GACVrB,KAAK,cAGT,sBAAK/I,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAK,QACL2R,YAAY,SACZC,SAAU,SAAC/E,GAAD,OAAOuE,EAASvE,EAAEgF,OAAOrV,QACnCA,MAAOyI,EACPnJ,KAAM,QACNoG,OAAO,EACP4P,UAAU,GACVrB,KAAM,cAGV,sBAAK/I,UAAU,OAAf,SACE,eAAC,iBAAD,CACEkK,SAAU,SAAC/E,GAAD,OAAOwE,EAAYxE,EAAEgF,OAAOrV,QACtCA,MAAO0I,EACPpJ,KAAK,eAGT,sBAAK4L,UAAS,eAAUC,KAAOyF,QAA/B,SACE,eAAC,UAAD,CAAQpN,KAAK,UAAUyQ,KAAK,SAASsB,SAAS,SAA9C,4HAID7P,GACC,oBAAGwF,UAAS,UAAKC,KAAOzF,MAAZ,qCAAZ,SACGA,OAIP,uBAAKwF,UAAS,UAAKC,KAAOqK,SAAZ,qCAAd,iIAEE,eAAC,IAAD,CAAM3L,GAAG,SAASqB,UAAS,eAAUC,KAAOI,MAA5C,qDCGKkK,GAxED,WACZ,IAAMlS,EAAWgH,KAEjB,EAA0B8D,mBAAS,IAAnC,oBAAO5F,EAAP,KAAcmM,EAAd,KACA,EAAgCvG,mBAAS,IAAzC,oBAAO3F,EAAP,KAAiBmM,EAAjB,KAEMnP,EAAQ+E,IAAY,SAAChB,GAAD,OAAWA,EAAMd,KAAKO,kBAUhD,OACE,uBAAMgC,UAAWC,KAAO2J,UAAxB,SACE,uBAAK5J,UAAS,eAAUC,KAAO4J,YAA/B,UACE,qBAAI7J,UAAU,kCAAd,sCACA,wBACEA,UAAS,gBAAWC,KAAO6J,MAC3B1V,KAAK,QACL2V,SAfa,SAAC5E,GACpBA,EAAE6E,iBACF3R,EAASqF,GAAUH,EAAOC,KAUtB,UAKE,sBAAKwC,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAK,QACL2R,YAAY,SACZC,SAAU,SAAC/E,GAAD,OAAOuE,EAASvE,EAAEgF,OAAOrV,QACnCA,MAAOyI,EACPnJ,KAAK,QACLoG,OAAO,EACP4P,UAAU,GACVrB,KAAK,cAGT,sBAAK/I,UAAU,OAAf,SACE,eAAC,iBAAD,CACEkK,SAAU,SAAC/E,GAAD,OAAOwE,EAAYxE,EAAEgF,OAAOrV,QACtCA,MAAO0I,EACPpJ,KAAK,eAGT,sBAAK4L,UAAS,eAAUC,KAAOyF,QAA/B,SACE,eAAC,UAAD,CAAQpN,KAAK,UAAUyQ,KAAK,SAASsB,SAAS,SAA9C,8CAID7P,GACC,oBAAGwF,UAAS,UAAKC,KAAOzF,MAAZ,qCAAZ,SACGA,OAIP,uBAAKwF,UAAS,eAAUC,KAAOqK,SAAjB,gCAAd,oIAEE,eAAC,IAAD,CAAM3L,GAAG,YAAYqB,UAAS,eAAUC,KAAOI,MAA/C,6HAIF,uBAAKL,UAAS,UAAKC,KAAOqK,SAAZ,qCAAd,uFAEE,eAAC,IAAD,CAAM3L,GAAI,mBAAoBqB,UAAS,eAAUC,KAAOI,MAAxD,oICGKmK,GAnEQ,WACrB,MAA0BrH,mBAAS,IAAnC,oBAAO5F,EAAP,KAAcmM,EAAd,KACA,EAA0BvG,mBAAuB,MAAjD,oBAAO3I,EAAP,KAAciQ,EAAd,KAEMjD,EAAUC,eAkBhB,OACE,uBAAMzH,UAAWC,KAAO2J,UAAxB,SACE,uBAAK5J,UAAS,eAAUC,KAAO4J,YAA/B,UACE,qBAAI7J,UAAU,kCAAd,uIAGA,wBACEA,UAAS,gBAAWC,KAAO6J,MAC3B1V,KAAK,QACL2V,SAzBa,SAAC5E,G9B6IM,IAACtM,E8B5I3BsM,EAAE6E,iBAMFS,EAAS,O9BsIkB5R,E8BrIT,CAAE0E,S9BsIflH,MAAM,GAAD,OAAIT,EAAJ,mBAAqC,CAC/CU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUmC,KAEpBhF,MAAK,SAACiC,GAAD,OAASD,EAAmCC,MACjDjC,MAAK,SAACgF,GACL,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EACnB3C,QAAQC,OAAO0C,O8B/IrBhF,MAAK,WACJ+C,aAAaI,QAAQ,gBAAiB,QACtCwQ,EAAQ9S,QAAQ,sBAEjB2F,OAAM,SAACpE,GAAD,OAASwU,EAASxU,OASvB,UAKE,sBAAK+J,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAK,QACL2R,YAAY,oDACZC,SAAU,SAAC/E,GAAD,OAAOuE,EAASvE,EAAEgF,OAAOrV,QACnCA,MAAOyI,EACPnJ,KAAK,QACLoG,OAAO,EACP4P,UAAU,GACVrB,KAAK,cAGT,sBAAK/I,UAAS,eAAUC,KAAOyF,QAA/B,SACE,eAAC,UAAD,CAAQpN,KAAK,UAAUyQ,KAAK,SAASsB,SAAS,SAA9C,wFAID7P,GACC,oBAAGwF,UAAS,UAAKC,KAAOzF,MAAZ,qCAAZ,SACGA,OAIP,uBAAKwF,UAAS,UAAKC,KAAOqK,SAAZ,qCAAd,yGAEE,eAAC,IAAD,CAAM3L,GAAI,SAAUqB,UAAS,eAAUC,KAAOI,MAA9C,qD,iDCtBKqK,GAzCK,WAClB,IAAMrS,EAAWgH,KACXwB,EAAWC,eAMjB,OACE,uCACE,eAAC,IAAD,CACElB,OAAK,EACLjB,GAAI,WACJ2B,gBAAiBL,KAAO0K,WACxB3K,UAAS,mEAA8DC,KAAOI,MAJhF,wDAQA,eAAC,IAAD,CACET,OAAK,EACLjB,GAAI,kBACJ2B,gBAAiBL,KAAO0K,WACxB3K,UAAS,mEAA8DC,KAAOI,MAJhF,mGAQA,yBACEL,UAAS,mEAA8DC,KAAOyF,QAC9Ef,QAxBe,WACnBtM,EAAS8E,OAqBP,4CAMA,oBAAG6C,UAAU,wDAAb,SACyB,aAAtBa,EAASe,SACN,uTACA,uTC0GGgJ,GApIC,WACd,IAAMvS,EAAWgH,KACjB,EAAkCE,IAAY,SAAChB,GAAD,OAAWA,EAAMd,QAAvD5E,EAAR,EAAQA,KAAMqF,EAAd,EAAcA,gBACRT,EAAO5E,EAEb,EAAkCsK,mBAAS,CACzC/O,KAAI,OAAEqJ,QAAF,IAAEA,OAAF,EAAEA,EAAMrJ,KACZmJ,MAAK,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAMF,MACbC,SAAU,KAHZ,oBAAOqN,EAAP,KAAkBC,EAAlB,KAMAhH,qBAAU,WACRzL,EAASsF,MACR,CAACtF,IAEJyL,qBAAU,WACRgH,GAAa,SAACC,GAAD,mBAAC,eACTA,GADQ,IAEX3W,MAAU,OAAJqJ,QAAI,IAAJA,OAAA,EAAAA,EAAMrJ,OAAQ,GACpBmJ,OAAW,OAAJE,QAAI,IAAJA,OAAA,EAAAA,EAAMF,QAAS,UAEvB,CAACE,IAEJ,IAAMuN,EACJH,EAAUzW,QAAV,OAAmBqJ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMrJ,OACzByW,EAAUtN,SAAV,OAAoBE,QAApB,IAAoBA,OAApB,EAAoBA,EAAMF,QAC1BsN,EAAUrN,SAwBNyN,EAAoB,SAAC9F,GACzB2F,GAAa,SAACC,GAAD,mBAAC,eACTA,GADQ,mBAEV5F,EAAEgF,OAAO/V,KAAO+Q,EAAEgF,OAAOrV,YAI9B,OACE,wBAAMkL,UAAS,UAAKkL,KAAatB,WAAjC,UACE,sBAAK5J,UAAS,sBAAiBC,KAAOE,MAAtC,SACE,eAAC,GAAD,MAEF,wBACEH,UAAS,gBAAWC,KAAO6J,KAAlB,YAA0BoB,KAAapB,MAChDC,SApCe,SAAC5E,GACpBA,EAAE6E,iBACF3R,EAASuF,GAAWiN,IAAYhX,MAAK,WAC9BqK,GACH4M,EAAa,CACX1W,KAAI,OAAEqJ,QAAF,IAAEA,OAAF,EAAEA,EAAMrJ,KACZmJ,MAAK,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAMF,MACbC,SAAU,SA2Bd,UAIE,sBAAKwC,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAM,OACN2R,YAAa,qBACbC,SAAUe,EACVnW,MAAO+V,EAAUzW,KACjBA,KAAM,OACNoG,OAAO,EACP4P,UAAW,GACXrB,KAAM,UACNoC,KAAM,eAGV,sBAAKnL,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAM,QACN2R,YAAa,SACbC,SAAUe,EACVnW,MAAO+V,EAAUtN,MACjBnJ,KAAM,QACNoG,OAAO,EACP4P,UAAW,GACXrB,KAAM,UACNoC,KAAM,eAGV,sBAAKnL,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAM,WACN2R,YAAa,uCACbC,SAAUe,EACVnW,MAAO+V,EAAUrN,SACjBpJ,KAAM,WACNoG,OAAO,EACP4P,UAAW,GACXrB,KAAM,UACNoC,KAAM,eAGTH,GACC,uBAAKhL,UAAWC,KAAOyF,OAAvB,UACE,eAAC,UAAD,CACEpN,KAAK,YACL+R,SAAS,SACTtB,KAAK,SACLpE,QAtES,SAACQ,GACpBA,EAAE6E,iBACFc,EAAa,CACX1W,KAAI,OAAEqJ,QAAF,IAAEA,OAAF,EAAEA,EAAMrJ,KACZmJ,MAAK,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAMF,MACbC,SAAU,MA6DJ,8DAQA,eAAC,UAAD,CAAQlF,KAAK,UAAUyQ,KAAK,SAASsB,SAAS,SAA9C,uEAKHnM,GACC,oBACE8B,UAAS,UAAKkL,KAAa1Q,MAAlB,qCADX,SAGG0D,W,6DC5IPkN,GAAwC,CAC5CC,QAAS,yDACTC,KAAM,mDACNC,QAAS,wCA8BIC,GAvBiC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7CC,EAAY,GAChB,OAAQD,GACN,IAAK,UACHC,EAAY,UACZ,MACF,IAAK,OACHA,EAAY,UACZ,MACF,QACEA,EAAY,UAGhB,OACE,uBACE1L,UAAU,mCACV8B,MAAO,CAAE6J,MAAOD,GAFlB,SAIGN,GAAWK,M,kDCvBX,SAASG,GAAezW,GAC7B,OAAI0W,aAAQ1W,GACJ,+CAAN,OAAmB2W,aAAO3W,EAAG,QAAS,CAAE4W,OAAQC,QAG9CC,aAAY9W,GACR,mCAAN,OAAiB2W,aAAO3W,EAAG,QAAS,CAAE4W,OAAQC,QAG1C,GAAN,OAAUE,aAAe/W,EAAGC,KAAK+W,MAAO,CAAEJ,OAAQC,OAAlD,mCCEF,IA8GeI,GA9G8B,SAAC,GAAe,IAAb7Q,EAAY,EAAZA,MACxCsF,EAAWC,eAGX1G,EAAcmF,IAAY,SAAChB,GAAD,OAAWA,EAAMnE,YAAYvB,QAEvDwT,EAAYzJ,mBAAQ,WACxB,IAAKxI,EAAYyO,OAAQ,OAAO,KAEhC,IAAMyD,EAAkB/Q,EAAMnB,YAAYgO,QACxC,SAACmE,EAAoBpL,GACnB,IAAMR,EAAavG,EAAYoS,MAAK,SAACxD,GAAD,OAASA,EAAI/H,MAAQE,KACzD,OAAIR,EAAkB,GAAN,mBAAW4L,GAAX,CAAgB5L,IACzB4L,IAET,IAGIpQ,EAAQmQ,EAAgBlE,QAAO,SAACmE,EAAKpL,GACzC,OAAOoL,EAAMpL,EAAKH,QACjB,GAEGyL,EAAoBH,EAAgB7N,MAAM,EApB3B,GAsBfiO,EACJJ,EAAgBzD,OAvBG,EAwBfyD,EAAgBzD,OAxBD,EAyBf,EAEA8D,EAAOf,GAAe,IAAIxW,KAAKmG,EAAMqR,YAC3C,OAAO,2BACFrR,GADL,IAEE+Q,kBACAG,oBACAC,UACAvQ,QACAwQ,WAED,CAACpR,EAAOnB,IAEX,OAAKiS,EAGH,gBAAC,IAAD,CACE1N,GAAI,CACFiD,SAAS,GAAD,OAAKf,EAASe,SAAd,YAA0ByK,EAAU5Q,QAC5C8C,MAAO,CAAEsD,WAAYhB,IAEvBb,UAAS,wBAAmBC,KAAO1E,OALrC,UAOE,uBAAKyE,UAAWC,KAAO4M,WAAvB,UACE,wBAAM7M,UAAS,wCAAmCC,KAAOxE,QAAzD,cACIqR,OAAOT,EAAU5Q,QAAQsR,SAAS,EAAG,QAEzC,uBAAM/M,UAAU,kDAAhB,SACGqM,EAAUM,UAGf,qBAAI3M,UAAS,0CAAqCC,KAAO+M,YAAzD,SACGX,EAAUjY,OAEU,oBAAtByM,EAASe,UACR,eAAC,GAAD,CAAa6J,OAAQY,EAAUZ,SAEjC,uBAAKzL,UAAS,eAAUC,KAAOgN,eAA/B,UACE,qBAAIjN,UAAWC,KAAO7F,YAAtB,SACGiS,EAAUI,kBAAkBxJ,KAAI,SAACtC,EAAYoF,GAC5C,IAAImH,EAjES,EAiEiBnH,EAC1BoH,EAAQ,GAAKpH,EACjB,OACE,sBACE/F,UAAWC,KAAOmN,SAClBtL,MAAO,CAAEoL,OAAQA,EAAQC,MAAOA,GAFlC,UAKE,sBACErL,MAAO,CACLJ,QACE2K,EAAUK,SA5EP,IA4EqC3G,EAAQ,EAC5C,MACA,KAER/F,UAAWC,KAAO+B,IAClBC,IAAKtB,EAAW0M,aAChBnL,IAAKvB,EAAWvM,OAlFT,IAoFW2R,EAAQ,EAC1B,uBACE/F,UAAS,wCAAmCC,KAAOyM,SADrD,SAGGL,EAAUK,QAAU,EAApB,WAA4BL,EAAUK,SAAY,OAEnD,OAnBC3G,QAwBb,iCACE,uBACE/F,UAAS,6CAAwCC,KAAOqN,aAD1D,SAGGjB,EAAUlQ,QAEb,eAAC,gBAAD,CAAc7D,KAAK,qBA/DJ,MC/BViV,GAdgC,SAAC,GAAgB,IACxDC,EADuD,EAAbtR,OACrBuR,MAAK,SAACpW,EAAGqW,GAClC,OAAO,IAAItY,KAAKsY,EAAEd,WAAWtX,UAAY,IAAIF,KAAKiC,EAAEuV,WAAWtX,aAGjE,OACE,sBAAK0K,UAAS,UAAKC,KAAO2E,SAA1B,SACG4I,EAAYvK,KAAI,SAAC1H,GAChB,OAAO,eAAC,GAAD,CAAWA,MAAOA,GAAYA,EAAM0F,WCkCpC0M,GArCM,WACnB,IAAMtV,EAAWgH,KACXnD,EAASqD,IAAY,SAAChB,GAAD,OAAWA,EAAMrC,OAAOrD,QAuBnD,OArBAiL,qBAAU,WACR,IAAM7M,EAAc9C,EAAU,eAC9B,GAAK8C,EAYL,OARAoB,EAAS,CACPC,KAAMc,EACNb,QAAQ,GAAD,OrCxBwB,yCqCwBxB,kBAAoCtB,EAAYvC,QACrD,UACA,OAIG,WACL2D,EAAS,CACPC,KAAMkB,OAGT,CAACnB,IAGF,wBAAM2H,UAAS,UAAKC,KAAOsJ,MAA3B,UACE,sBAAKvJ,UAAS,sBAAiBC,KAAOE,MAAtC,SACE,eAAC,GAAD,MAEF,sBAAKH,UAAS,gBAAWC,KAAO/D,QAAhC,SACE,eAAC,GAAD,CAAYA,OAAQA,U,uCCKb0R,GAlCuC,SAAC,GAIhD,IAAD,IAHJC,kBAGI,SAFJ5I,EAEI,EAFJA,SACG6I,EACC,mBACEjQ,EAAgB0B,IAAY,SAAChB,GAAD,OAAWA,EAAMd,KAAKI,iBAClDJ,EAAO8B,IAAY,SAAChB,GAAD,OAAWA,EAAMd,KAAK5E,QACzCgI,EAAWC,eAEjB,IAAKjD,EACH,OAAO,eAAC,GAAD,IAGT,GAAIgQ,GAAcpQ,EAAM,CACtB,IAAQmB,GAASiC,EAAStC,OAAS,CAAEK,KAAM,CAAEgD,SAAU,OAA/ChD,KAER,OACE,eAAC,KAAD,2BAAWkP,GAAX,aACE,eAAC,KAAD,CAAUnP,GAAIC,OAKpB,OAAKiP,GAAepQ,EAQb,eAAC,KAAD,2BAAWqQ,GAAX,aAAkB7I,KANrB,eAAC,KAAD,2BAAW6I,GAAX,aACE,eAAC,KAAD,CAAUnP,GAAI,CAAEiD,SAAU,SAAUrD,MAAO,CAAEK,KAAMiC,U,oBCQ5CkN,GA7CkB,WAC/B,IAAQhL,EAAOiL,eAAPjL,GAEFkL,EAAiB1O,IAAY,SAAChB,GAClC,OAAOA,EAAMnE,YAAYvB,KAAK2T,MAAK,SAACrL,GAAD,OAAUA,EAAKF,MAAQ8B,QAG5D,IAAKkL,EACH,OAAO,eAAC,GAAD,IAGT,IAAQ7Z,EACN6Z,EADM7Z,KAAM8Z,EACZD,EADYC,YAAaC,EACzBF,EADyBE,SAAUC,EACnCH,EADmCG,SAAUC,EAC7CJ,EAD6CI,IAAKC,EAClDL,EADkDK,cAGpD,OACE,uBAAKtO,UAAWC,KAAO2E,QAAvB,UACE,sBACE5E,UAAWC,KAAO+B,IAClBE,IAAI,yIACJD,IAAKiM,IAEP,qBAAIlO,UAAU,uCAAd,SAAsD5L,IACtD,oBAAG4L,UAAU,qCACb,sBAAIA,UAAS,UAAKC,KAAOsO,mBAAZ,2BAAb,UACE,sBAAIvO,UAAWC,KAAOuO,kBAAtB,UACE,oBAAGxO,UAAS,oBAAeC,KAAOmC,MAAlC,kFACA,oBAAGpC,UAAS,gCAAZ,SAAgDmO,OAElD,sBAAInO,UAAWC,KAAOuO,kBAAtB,UACE,oBAAGxO,UAAS,oBAAeC,KAAOmC,MAAlC,oDACA,oBAAGpC,UAAS,gCAAZ,SAAgDoO,OAElD,sBAAIpO,UAAWC,KAAOuO,kBAAtB,UACE,oBAAGxO,UAAS,oBAAeC,KAAOmC,MAAlC,8CACA,oBAAGpC,UAAS,gCAAZ,SAAgDqO,OAElD,sBAAIrO,UAAWC,KAAOuO,kBAAtB,UACE,oBAAGxO,UAAS,oBAAeC,KAAOmC,MAAlC,sEACA,oBAAGpC,UAAS,gCAAZ,SAAgDsO,cC+C3CG,GA/EO,WACpB,IAAMjH,EAAUC,eAChB,EAAgCtE,mBAAS,IAAzC,oBAAO3F,EAAP,KAAiBmM,EAAjB,KACA,EAA0BxG,mBAAS,IAAnC,oBAAOxM,EAAP,KAAc+X,EAAd,KACA,EAA0BvL,mBAAuB,MAAjD,oBAAO3I,EAAP,KAAciQ,EAAd,KAuBA,OANA3G,qBAAU,WACHlN,aAAaC,QAAQ,kBACxB2Q,EAAQ9S,QAAQ,sBAEjB,CAAC8S,IAGF,uBAAMxH,UAAWC,KAAO2J,UAAxB,SACE,uBAAK5J,UAAS,eAAUC,KAAO4J,YAA/B,UACE,qBAAI7J,UAAU,kCAAd,uIAGA,wBACEA,UAAS,gBAAWC,KAAO6J,MAC3B1V,KAAK,QACL2V,SA9Ba,SAAC5E,GxC2JK,IAACtM,EwC1J1BsM,EAAE6E,iBAKFS,EAAS,OxCqJiB5R,EwCpJT,CAAE2E,WAAU7G,SxCqJxBN,MAAM,GAAD,OAAIT,EAAJ,yBAA2C,CACrDU,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUmC,KAEpBhF,MAAK,SAACiC,GAAD,OAASD,EAAmCC,MACjDjC,MAAK,SAACgF,GACL,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9B,SAAgB8B,EACnB3C,QAAQC,OAAO0C,OwC9JrBhF,MAAK,WACJ+C,aAAa+X,WAAW,iBACxBnH,EAAQyB,KAAK,aAEd5O,OAAM,SAACpE,GAAD,OAASwU,EAASxU,OAevB,UAKE,sBAAK+J,UAAU,OAAf,SACE,eAAC,iBAAD,CACEkK,SAAU,SAAC/E,GAAD,OAAOwE,EAAYxE,EAAEgF,OAAOrV,QACtCA,MAAO0I,EACPpJ,KAAK,eAGT,sBAAK4L,UAAU,OAAf,SACE,eAAC,SAAD,CACE1H,KAAK,OACL2R,YAAY,kHACZC,SAAU,SAAC/E,GAAD,OAAOuJ,EAASvJ,EAAEgF,OAAOrV,QACnCA,MAAO6B,EACPvC,KAAK,QACLoG,OAAO,EACP4P,UAAU,GACVrB,KAAK,cAGT,sBAAK/I,UAAS,eAAUC,KAAOyF,QAA/B,SACE,eAAC,UAAD,CAAQpN,KAAK,UAAUyQ,KAAK,SAASsB,SAAS,SAA9C,sEAID7P,GACC,oBAAGwF,UAAS,UAAKC,KAAOzF,MAAZ,qCAAZ,SACGA,OAIP,uBAAKwF,UAAS,UAAKC,KAAOqK,SAAZ,qCAAd,yGAEE,eAAC,IAAD,CAAM3L,GAAG,SAASqB,UAAS,eAAUC,KAAOI,MAA5C,qD,oBCwDKuO,GA7HU,WACvB,IAAQnT,EAAWuS,eAAXvS,OACFpD,EAAWgH,KACXjF,EAAcmF,IAAY,SAAChB,GAAD,OAAWA,EAAMnE,YAAYvB,QAKvDyC,EAAYiE,IAAY,SAAChB,GAAW,IAAD,EACvC,GAAIA,EAAMrC,OAAOD,QAAUsC,EAAMrC,OAAOrD,KAAKgQ,OAAQ,CACnD,IAAMhQ,EAAO0F,EAAMrC,OAAOrD,KAAK2T,MAAK,SAACrL,GAAD,OAAUA,EAAK1F,UAAYA,KAC/D,GAAI5C,EAAM,OAAOA,EAGnB,GAAI0F,EAAMM,KAAK5C,QAAUsC,EAAMM,KAAK3C,OAAO2M,OAAQ,CACjD,IAAMhQ,EAAO0F,EAAMM,KAAK3C,OAAOsQ,MAAK,SAACrL,GAAD,OAAUA,EAAK1F,UAAYA,KAC/D,GAAI5C,EAAM,OAAOA,EAGnB,OAAI,UAAA0F,EAAMhD,MAAMO,qBAAZ,eAA2BL,WAAYA,EAClC8C,EAAMhD,MAAMO,cAGd,QAITgI,qBAAU,WACHxI,GACHjD,EAASmD,IAAkBC,MAE5B,CAACpD,EAAUiD,EAAWG,IAGzB,IAAM4Q,EAAYzJ,mBAAQ,WACxB,IAAKtH,IAAclB,EAAYyO,OAAQ,OAAO,KAE9C,IAAM8D,EAAOf,GAAe,IAAIxW,KAAKkG,EAAUsR,YAMzCN,EAAkBhR,EAAUlB,YAAYgO,QAC5C,SAACmE,EAA4BpL,GAC3B,GAAKoL,EAAIpL,GASPoL,EAAIpL,GAAMP,YATI,CACd,IAAMD,EAAavG,EAAYoS,MAAK,SAACxD,GAAD,OAASA,EAAI/H,MAAQE,KACrDR,IACF4L,EAAIpL,GAAJ,2BACKR,GADL,IAEEC,MAAO,KAOb,OAAO2L,IAET,IAGIpQ,EAAQ0S,OAAOC,OAAOxC,GAAiBlE,QAC3C,SAACmE,EAAKpL,GAAN,OAAeoL,EAAMpL,EAAKH,MAAQG,EAAKP,QACvC,GAGF,OAAO,2BACFtF,GADL,IAEEgR,kBACAK,OACAxQ,YAED,CAACb,EAAWlB,IAEf,OAAKiS,EAKH,uBAAKrM,UAAWC,KAAO8O,KAAvB,UACE,qBAAI/O,UAAS,iDAA4CC,KAAOC,QAAhE,SACGmM,EAAUjY,OAEb,eAAC,GAAD,CAAaqX,OAAQY,EAAUZ,SAC/B,oBAAGzL,UAAS,wCAAZ,mDACA,qBAAIA,UAAS,UAAKC,KAAO+O,KAAZ,SAAb,SACGH,OAAOC,OAAOzC,EAAUC,iBAAiBrJ,KAAI,SAAC9B,EAAM4E,GACnD,OACE,sBAAI/F,UAAS,oBAAeC,KAAOkB,MAAnC,UACE,sBAAKnB,UAAWC,KAAOmN,SAAvB,SACE,sBAAKpN,UAAWC,KAAOgP,OAAvB,SACE,sBACEjP,UAAWC,KAAO+B,IAClBC,IAAKd,EAAKkM,aACVnL,IAAKf,EAAK/M,WAIhB,uBAAM4L,UAAU,mCAAhB,SACGmB,EAAK/M,OAER,wBACE4L,UAAS,kDAA6CC,KAAOiP,UAD/D,UAGG/N,EAAKP,MAHR,MAGkBO,EAAKH,SAEvB,eAAC,gBAAD,CAAc1I,KAAM,cAlB0ByN,QAuBtD,uBAAK/F,UAAWC,KAAO2G,OAAvB,UACE,oBAAG5G,UAAU,kDAAb,SACGqM,EAAUM,OAEb,uBAAM3M,UAAS,6CAAwCC,KAAO9D,OAA9D,SACGkQ,EAAUlQ,QAEb,eAAC,gBAAD,CAAc7D,KAAM,kBA3CjB,eAAC,GAAD,KClFI6W,GARK,WAClB,OACE,qBAAInP,UAAS,iCAAb,kK,wCCWEoP,GAAwC,SAAC,GAIxC,IAHLlT,EAGI,EAHJA,OACAuG,EAEI,EAFJA,MACA4M,EACI,EADJA,UAEA,OACE,uBAAKrP,UAAS,eAAUC,KAAOqP,QAA/B,UACE,sBAAItP,UAAS,qCAAgCC,KAAOwC,OAApD,UAA8DA,EAA9D,OACA,qBAAIzC,UAAS,gBAAWC,KAAO+O,MAA/B,SACG9S,EAAO+G,KAAI,SAAC9B,EAAM4E,GACjB,OACE,qBACE/F,UAAS,wCAAmCC,KAAOsP,WACnDzN,MAAO,CAAE6J,MAAqB,SAAd0D,EAAuB,UAAY,WAFrD,SAKGlO,GAFI4E,YAgBbyJ,GAAiC,SAAC,GAAwB,IAAtB/M,EAAqB,EAArBA,MAAOmC,EAAc,EAAdA,QAC/C,OACE,uCACE,sBAAI5E,UAAS,2CAAsCC,KAAOwC,OAA1D,UACGA,EADH,OAGA,oBAAGzC,UAAS,sCAAiCC,KAAO2E,SAApD,SACGA,QAMH6K,GAAY,SAACvT,EAAkBuP,GACnC,OAAOvP,EACJoI,QAAO,SAACnD,GAAD,OAAUA,EAAKsK,SAAWA,KACjCxI,KAAI,SAAC9B,GAAD,OAAUA,EAAK1F,UACnBgD,MAAM,EAAG,KAwBCiR,GArBE,WACf,MAA8BnQ,IAAY,SAAChB,GAAD,OAAWA,EAAMM,QAAnD1C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTuT,EAAcpQ,IAAY,SAAChB,GAAD,OAC9BkR,GAAUlR,EAAMM,KAAK3C,OAAQ,WAEzB0T,EAAgBrQ,IAAY,SAAChB,GAAD,OAChCkR,GAAUlR,EAAMM,KAAK3C,OAAQ,cAG/B,OACE,qCACE,uBAAK8D,UAAWC,KAAO4P,QAAvB,UACE,eAAC,GAAD,CAAY3T,OAAQyT,EAAalN,MAAO,uCAAU4M,UAAW,SAC7D,eAAC,GAAD,CAAYnT,OAAQ0T,EAAenN,MAAO,mDAE5C,eAAC,GAAD,CAAQA,MAAO,wHAA0BmC,QAASzI,IAClD,eAAC,GAAD,CAAQsG,MAAO,iHAAwBmC,QAASxI,QC3BvC0T,GArCF,WACX,IAAMzX,EAAWgH,KAEjByE,qBAAU,WAMR,OALAzL,EAAS,CACPC,KAAMoB,EACNnB,Q5ChB6B,+C4CmBxB,WACLF,EAAS,CAAEC,KAAMwB,OAElB,CAACzB,IAEJ,IAAM6D,EAASqD,IAAY,SAAChB,GAAD,OAAWA,EAAMM,KAAK3C,UAEjD,OAAKA,EAAO2M,OAKV,wBAAM7I,UAAWC,KAAOkJ,cAAxB,UACE,qBAAInJ,UAAS,UAAKC,KAAOwC,MAAZ,yCAAb,uFAGA,uBAAKzC,UAAWC,KAAOsJ,KAAvB,UACE,sBAAKvJ,UAAWC,KAAO8P,aAAvB,SACE,eAAC,GAAD,CAAY7T,OAAQA,MAEtB,sBAAK8D,UAAWC,KAAO+P,WAAvB,SACE,eAAC,GAAD,YAbE,eAAC,GAAD,KCqHGC,GAtHH,WAAO,IAAD,IACV5X,EAAWgH,KACXmI,EAAUC,eACV5G,EAAWC,eAIXe,EAAahB,EAAStC,OAASsC,EAAStC,MAAMsD,WAI9C+D,EAAW,UAAGjG,aAAkC,CACpD,0BACA,yBAFe,iBAAG,EAGhBuQ,cAHa,aAAG,EAGRzU,OAEN0U,EAAmB,kBAAM3I,EAAQ4I,UAWvC,OATAtM,qBAAU,WACRzL,EAAS8B,KAKT9B,GjCsDyC,SAACA,GACxClE,EAAU,eACZkE,EAASsF,MAAW0S,SAAQ,WAC1BhY,EAAS,CAAEC,KAAM+D,QAGnBhE,EAAS,CAAEC,KAAM+D,UiC3DhB,CAAChE,IAGF,uBAAK2H,UAAWC,KAAOqQ,IAAvB,UACE,eAAC,GAAD,IACA,gBAAC,KAAD,CAAQzP,SAAUgB,GAAchB,EAAhC,UACE,eAAC,GAAD,CAAgB5L,KAAK,WAAW2K,OAAK,EAArC,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAgB3K,KAAK,kBAAkB2K,OAAK,EAA5C,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAgB3K,KAAK,0BAA0B2K,OAAK,EAApD,SACE,uBAAKI,UAAWC,KAAOsQ,eAAvB,UACE,qBACEvQ,UAAS,wCAAmCC,KAAOuQ,cADrD,cAGI5K,GAAeA,EAAYmH,SAAS,EAAG,QAE3C,eAAC,GAAD,SAGJ,eAAC,GAAD,CAAgBc,YAAY,EAAM5Y,KAAK,YAAY2K,OAAK,EAAxD,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAgBiO,YAAY,EAAM5Y,KAAK,SAAS2K,OAAK,EAArD,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAgBiO,YAAY,EAAM5Y,KAAK,mBAAmB2K,OAAK,EAA/D,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAgBiO,YAAY,EAAM5Y,KAAK,kBAAkB2K,OAAK,EAA9D,SACE,eAAC,GAAD,MAEF,eAAC,KAAD,CAAO3K,KAAK,mBAAmB2K,OAAK,EAApC,SACE,uBAAKI,UAAWC,KAAOsQ,eAAvB,UACE,oBAAGvQ,UAAS,oCAA+BC,KAAOuQ,cAAlD,qHAGA,eAAC,GAAD,SAGJ,eAAC,KAAD,CAAOvb,KAAK,QAAQ2K,OAAK,EAAzB,SACE,eAAC,GAAD,MAEF,eAAC,KAAD,CAAO3K,KAAK,gBAAgB2K,OAAK,EAAjC,SACE,uBAAKI,UAAWC,KAAOsQ,eAAvB,UACE,qBACEvQ,UAAS,wCAAmCC,KAAOuQ,cADrD,cAGI5K,GAAeA,EAAYmH,SAAS,EAAG,QAE3C,eAAC,GAAD,SAGJ,eAAC,KAAD,CAAO9X,KAAK,IAAI2K,OAAK,EAArB,SACE,eAAC,GAAD,MAEF,eAAC,KAAD,UACE,sBAAKI,UAAWC,KAAOsQ,eAAvB,SACE,eAAC,GAAD,WAIL1O,GACC,uCACE,eAAC,KAAD,CAAO5M,KAAK,mBAAmB2K,OAAK,EAApC,SACE,eAAC,GAAD,CAAO5H,QAASmY,EAAkB1N,MAAM,0GAAxC,SACE,eAAC,GAAD,QAGJ,eAAC,GAAD,CAAgBxN,KAAK,0BAA0B2K,OAAK,EAApD,SACE,eAAC,GAAD,CACE5H,QAASmY,EACT1N,MAAK,WAAMmD,GAAeA,EAAYmH,SAAS,EAAG,MAFpD,SAIE,eAAC,GAAD,QAGJ,eAAC,KAAD,CAAO9X,KAAK,gBAAgB2K,OAAK,EAAjC,SACE,eAAC,GAAD,CACE5H,QAASmY,EACT1N,MAAK,WAAMmD,GAAeA,EAAYmH,SAAS,EAAG,MAFpD,SAIE,eAAC,GAAD,eClIdxH,IAASkL,OACL,eAAC,IAAMC,WAAP,UACI,eAAC,IAAD,UACI,eAAC,IAAD,CAAUhZ,MAAOA,GAAjB,SACI,eAAC,GAAD,UAIZpD,SAAS4P,eAAe,SAM5BxQ,K,mBCvBAF,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,eAAiB,mCAAmC,KAAO,yBAAyB,YAAc,gCAAgC,mBAAqB,uCAAuC,KAAO,2B,mBCA3RD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,mBAAqB,+CAA+C,kBAAoB,gD,mBCAxJD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,MAAQ,0BAA0B,WAAa,+BAA+B,WAAa,+BAA+B,cAAgB,kCAAkC,YAAc,gCAAgC,SAAW,6BAA6B,IAAM,wBAAwB,QAAU,8B,mBCA1WD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,2BAA2B,OAAS,2BAA2B,SAAW,6BAA6B,OAAS,2BAA2B,IAAM,wBAAwB,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,yBAAyB,OAAS,2BAA2B,MAAQ,4B,mBCA5ZD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,eAAiB,4BAA4B,aAAe,4B,mBCArGD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,KAAO,wBAAwB,MAAQ,yBAAyB,UAAY,6BAA6B,QAAU,6B,mBCA7MD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,sBAAsB,IAAM,mBAAmB,QAAU,yB,mBCAhJD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,OAAS,+B,mBCA3GD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,MAAQ,oBAAoB,KAAO,mBAAmB,aAAe,2BAA2B,WAAa,2B,mBCA3KD,EAAOC,QAAU,CAAC,QAAU,mCAAmC,KAAO,gCAAgC,KAAO,kC,mBCA7GD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,MAAQ,oBAAoB,KAAO,qB,mBCAjGD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,IAAM,gCAAgC,QAAU,oCAAoC,KAAO,iCAAiC,WAAa,yC,mBCA/ND,EAAOC,QAAU,CAAC,IAAM,2BAA2B,MAAQ,6BAA6B,KAAO,8B,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,KAAO,6BAA6B,OAAS,iC,kBCAnGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,WAAa,2BAA2B,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,uBAAuB,SAAW,yBAAyB,KAAO,qBAAqB,MAAQ,wB,mBCAlQD,EAAOC,QAAU,CAAC,QAAU,4CAA4C,kBAAoB,wD,mBCA5FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,iBAAmB,oCAAoC,KAAO,2B","file":"static/js/main.6d18a236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"ingredients-category_items__7Zb2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__AKixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"orders-list_content__3-TZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_constructor\":\"burger-constructor_burger_constructor__jXyGp\",\"elements\":\"burger-constructor_elements__1mnPz\",\"total\":\"burger-constructor_total__2z4fk\",\"cost\":\"burger-constructor_cost__3NqMY\",\"text\":\"burger-constructor_text__1C_uq\",\"noBuns\":\"burger-constructor_noBuns__3BH7a\",\"noBunsTop\":\"burger-constructor_noBunsTop__w5Mru\",\"noBunsBottom\":\"burger-constructor_noBunsBottom__1fruv\",\"dragActive\":\"burger-constructor_dragActive__1YQQm\",\"element\":\"burger-constructor_element__10R7L\",\"element_fullwidth\":\"burger-constructor_element_fullwidth__28_mc\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getCookie(name: string): string | undefined {\n  const matches = document.cookie.match(\n    new RegExp(\n      \"(?:^|; )\" +\n        // eslint-disable-next-line no-useless-escape\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\n        \"=([^;]*)\"\n    )\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\n/* В тренажере приводится несовсем корректный пример этой функции\n там не задается path и возможна ситуация, когда на разных страницах в cookies\n будут разные токены, поэтому в path нужно задавать корень сайта path: '/' */\n\nexport function setCookie(\n  name: string,\n  value: string,\n  props: { [key: string]: string | number | Date | boolean } = {}\n) {\n  props = {\n    path: \"/\",\n    ...props,\n  };\n\n  let exp = props.expires;\n  if (exp && typeof exp === \"number\") {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n\n  if (exp && exp instanceof Date) {\n    props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + \"=\" + value;\n  for (const propName in props) {\n    updatedCookie += \"; \" + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, \"\", { expires: -1 });\n}\n","import { setCookie, getCookie } from \"./cookie\";\nimport { TIngredient, TOrder, TUser } from \"./types\";\n\nconst BURGER_API_URL = \"https://norma.nomoreparties.space/api\";\nexport const BURGER_API_WSS_ORDERS = \"wss://norma.nomoreparties.space/orders\";\nexport const BURGER_API_WSS_FEED = \"wss://norma.nomoreparties.space/orders/all\";\n\nconst checkResponse = <T>(res: Response): Promise<T> => {\n  return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\n};\n\ntype TServerResponse<T> = {\n  success: boolean;\n} & T;\n\ntype TRefreshResponse = TServerResponse<{\n  refreshToken: string;\n  accessToken: string;\n}>;\n\nexport const refreshToken = (): Promise<TRefreshResponse> => {\n  return fetch(`${BURGER_API_URL}/auth/token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify({\n      token: localStorage.getItem(\"refreshToken\"),\n    }),\n  })\n    .then((res) => checkResponse<TRefreshResponse>(res))\n    .then((refreshData) => {\n      if (!refreshData.success) {\n        return Promise.reject(refreshData);\n      }\n      localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\n      setCookie(\"accessToken\", refreshData.accessToken);\n      return refreshData;\n    });\n};\n\n/* Это предпочтительны способ обновления токена, но допустимы и другие, главное,\nчто бы обновление токена работало корректно */\nexport const fetchWithRefresh = async <T>(\n  url: RequestInfo,\n  options: RequestInit\n) => {\n  try {\n    const res = await fetch(url, options);\n    return await checkResponse<T>(res);\n  } catch (err) {\n    if ((err as { message: string }).message === \"jwt expired\") {\n      const refreshData = await refreshToken();\n      if (options.headers) {\n        (options.headers as { [key: string]: string }).authorization =\n          refreshData.accessToken;\n      }\n      const res = await fetch(url, options);\n      return await checkResponse<T>(res);\n    } else {\n      return Promise.reject(err);\n    }\n  }\n};\n\ntype TIngredientsResponse = TServerResponse<{\n  data: TIngredient[];\n}>;\n\nexport const getIngredients = () => {\n  return fetch(`${BURGER_API_URL}/ingredients`)\n    .then((res) => checkResponse<TIngredientsResponse>(res))\n    .then((data) => {\n      if (data?.success) return data.data;\n      return Promise.reject(data);\n    });\n};\n\ntype TNewOrderResponse = TServerResponse<{\n  order: TOrder;\n  name: string;\n}>;\n\nexport const orderBurger = (data: string[]) => {\n  return fetchWithRefresh<TNewOrderResponse>(`${BURGER_API_URL}/orders`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      authorization: getCookie(\"accessToken\"),\n    } as HeadersInit,\n    body: JSON.stringify({\n      ingredients: data,\n    }),\n  }).then((data) => {\n    if (data?.success) return data;\n    return Promise.reject(data);\n  });\n};\n\ntype TOrderResponse = TServerResponse<{\n  orders: TOrder[];\n}>;\n\nexport const getOrderByNumber = (number: number) => {\n  return fetch(`${BURGER_API_URL}/orders/${number}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => checkResponse<TOrderResponse>(res));\n};\n\nexport type TRegisterData = {\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype TAuthResponse = TServerResponse<{\n  refreshToken: string;\n  accessToken: string;\n  user: TUser;\n}>;\n\nexport const registerUser = (data: TRegisterData) => {\n  return fetch(`${BURGER_API_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => checkResponse<TAuthResponse>(res))\n    .then((data) => {\n      if (data?.success) return data;\n      return Promise.reject(data);\n    });\n};\n\nexport type TLoginData = {\n  email: string;\n  password: string;\n};\n\nexport const loginUser = (data: TLoginData) => {\n  return fetch(`${BURGER_API_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => checkResponse<TAuthResponse>(res))\n    .then((data) => {\n      if (data?.success) return data;\n      return Promise.reject(data);\n    });\n};\n\nexport const forgotPassword = (data: { email: string }) => {\n  return fetch(`${BURGER_API_URL}/password-reset`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => checkResponse<TServerResponse<{}>>(res))\n    .then((data) => {\n      if (data?.success) return data;\n      return Promise.reject(data);\n    });\n};\n\nexport const resetPassword = (data: { password: string; token: string }) => {\n  return fetch(`${BURGER_API_URL}/password-reset/reset`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => checkResponse<TServerResponse<{}>>(res))\n    .then((data) => {\n      if (data?.success) return data;\n      return Promise.reject(data);\n    });\n};\n\ntype TUserResponse = TServerResponse<{ user: TUser }>;\n\nexport const getUser = () => {\n  return fetchWithRefresh<TUserResponse>(`${BURGER_API_URL}/auth/user`, {\n    headers: {\n      authorization: getCookie(\"accessToken\"),\n    } as HeadersInit,\n  });\n};\n\nexport const updateUser = (user: Partial<TRegisterData>) => {\n  return fetchWithRefresh<TUserResponse>(`${BURGER_API_URL}/auth/user`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      authorization: getCookie(\"accessToken\"),\n    } as HeadersInit,\n    body: JSON.stringify(user),\n  });\n};\n\nexport const logout = () => {\n  return fetch(`${BURGER_API_URL}/auth/logout`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify({\n      token: localStorage.getItem(\"refreshToken\"),\n    }),\n  }).then((res) => checkResponse<TServerResponse<{}>>(res));\n};\n","import { refreshToken } from \"../../utils/burger-api\";\nimport { RootState } from \"../store\";\nimport { Middleware } from \"redux\";\n\nexport type TwsActions = {\n  wsInit: string;\n  wsClose: string;\n  wsSendMessage?: string;\n  onOpen: string;\n  onClose: string;\n  onError: string;\n  onMessage: string;\n};\n\n/* Мидлвара socketMiddleware должна быть универсальная, в ней не должны быть захардкожены\nопределенные экшены и адреса, они должны передаваться */\nexport const socketMiddleware = (\n  wsActions: TwsActions\n): Middleware<{}, RootState> => {\n  return (store) => {\n    let socket: WebSocket | null = null;\n    const {\n      wsInit,\n      wsClose,\n      wsSendMessage,\n      onOpen,\n      onClose,\n      onError,\n      onMessage,\n    } = wsActions;\n\n    return (next) => (action) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n\n      if (type === wsInit) {\n        socket = new WebSocket(payload);\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          dispatch({\n            type: onMessage,\n            payload: {\n              data: parsedData,\n              timestamp: new Date().getTime() / 100,\n            },\n          });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n\n      if (wsClose && type === wsClose && socket) {\n        socket.close();\n      }\n\n      if (wsSendMessage && type === wsSendMessage && socket) {\n        socket.send(JSON.stringify(payload));\n      }\n\n      next(action);\n    };\n  };\n};\n\n/* пример реализации с реконнектом при обрыве соединения и обновлением токена*/\n/* это в можно лучше */\nconst RECONNECT_PERIOD = 3000;\n\nexport const socketMiddlewareWithReconnect = (\n  wsActions: TwsActions,\n  withTockenRefresh = false\n): Middleware<{}, RootState> => {\n  return (store) => {\n    const {\n      wsInit,\n      wsClose,\n      wsSendMessage,\n      onOpen,\n      onClose,\n      onError,\n      onMessage,\n    } = wsActions;\n    let socket: WebSocket | null = null;\n    let isConnected = false;\n    let reconnectTimer = 0;\n    let url = \"\";\n\n    return (next) => (action) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n\n      if (type === wsInit) {\n        url = action.payload;\n        socket = new WebSocket(url);\n        isConnected = true;\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n\n          /* В \"можно лучше\" - Обновление токена */\n          if (\n            withTockenRefresh &&\n            parsedData.message === \"Invalid or missing token\"\n          ) {\n            refreshToken()\n              .then((refreshData) => {\n                const wssUrl = new URL(url);\n                wssUrl.searchParams.set(\n                  \"token\",\n                  refreshData.accessToken.replace(\"Bearer \", \"\")\n                );\n                dispatch({\n                  type: wsInit,\n                  payload: wssUrl,\n                });\n              })\n              .catch((err) => {\n                dispatch({ type: onError, payload: err });\n              });\n\n            dispatch({ type: wsClose });\n\n            return;\n          }\n\n          dispatch({\n            type: onMessage,\n            payload: {\n              data: parsedData,\n              timestamp: new Date().getTime() / 100,\n            },\n          });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n\n          /* В \"можно лучше\" - предусмотреть реконнект при обрыве связи */\n          if (isConnected) {\n            reconnectTimer = window.setTimeout(() => {\n              dispatch({\n                type: wsInit,\n                payload: url,\n              });\n            }, RECONNECT_PERIOD);\n          }\n        };\n      }\n\n      if (wsClose && type === wsClose && socket) {\n        clearTimeout(reconnectTimer);\n        isConnected = false;\n        reconnectTimer = 0;\n        socket.close();\n      }\n\n      if (wsSendMessage && type === wsSendMessage && socket) {\n        socket.send(JSON.stringify(payload));\n      }\n\n      next(action);\n    };\n  };\n};\n","import { TOrder } from \"../../utils/types\";\n\nexport const ORDERS_CONNECTION_INIT = \"ORDERS_CONNECTION_INIT\";\nexport const ORDERS_CONNECTION_SUCCESS = \"ORDERS_CONNECTION_SUCCESS\";\nexport const ORDERS_CONNECTION_ERROR = \"ORDERS_CONNECTION_ERROR\";\nexport const ORDERS_CONNECTION_CLOSED = \"ORDERS_CONNECTION_CLOSED\";\nexport const ORDERS_CONNECTION_CLOSE = \"ORDERS_CONNECTION_CLOSE\";\nexport const ORDERS_GET_MESSAGE = \"ORDERS_GET_MESSAGE\";\n\nexport type TOrdersConnectionInitAction = {\n  readonly type: typeof ORDERS_CONNECTION_INIT;\n  readonly payload: string | URL;\n};\n\nexport type TOrdersConnectionSuccessAction = {\n  readonly type: typeof ORDERS_CONNECTION_SUCCESS;\n  readonly payload: Event;\n};\n\nexport type TOrdersConnectionErrorAction = {\n  readonly type: typeof ORDERS_CONNECTION_ERROR;\n  readonly payload: Event;\n};\n\nexport type TOrdersConnectionClosedAction = {\n  readonly type: typeof ORDERS_CONNECTION_CLOSED;\n  readonly payload: Event;\n};\n\nexport type TOrdersConnectionCloseAction = {\n  readonly type: typeof ORDERS_CONNECTION_CLOSE;\n};\n\nexport type TOrdersGetMessageAction = {\n  readonly type: typeof ORDERS_GET_MESSAGE;\n  readonly payload: {\n    data: {\n      orders: TOrder[];\n    };\n    timestamp: number;\n  };\n};\n\nexport type TOrdersActions =\n  | TOrdersConnectionInitAction\n  | TOrdersConnectionSuccessAction\n  | TOrdersConnectionErrorAction\n  | TOrdersConnectionClosedAction\n  | TOrdersConnectionCloseAction\n  | TOrdersGetMessageAction;\n","import { TOrder } from \"../../utils/types\";\n\nexport const FEED_CONNECTION_INIT = \"FEED_CONNECTION_INIT\";\nexport const FEED_CONNECTION_SUCCESS = \"FEED_CONNECTION_SUCCESS\";\nexport const FEED_CONNECTION_ERROR = \"FEED_CONNECTION_ERROR\";\nexport const FEED_CONNECTION_CLOSED = \"FEED_CONNECTION_CLOSED\";\nexport const FEED_CONNECTION_CLOSE = \"FEED_CONNECTION_CLOSE\";\nexport const FEED_GET_MESSAGE = \"FEED_GET_MESSAGE\";\n\nexport type TFeedConnectionInitAction = {\n  readonly type: typeof FEED_CONNECTION_INIT;\n  readonly payload: string | URL;\n};\n\nexport type TFeedConnectionSuccessAction = {\n  readonly type: typeof FEED_CONNECTION_SUCCESS;\n  readonly payload: Event;\n};\n\nexport type TFeedConnectionErrorAction = {\n  readonly type: typeof FEED_CONNECTION_ERROR;\n  readonly payload: Event;\n};\n\nexport type TFeedConnectionClosedAction = {\n  readonly type: typeof FEED_CONNECTION_CLOSED;\n  readonly payload: Event;\n};\n\nexport type TFeedConnectionCloseAction = {\n  readonly type: typeof FEED_CONNECTION_CLOSE;\n};\n\nexport type TFeedGetMessageAction = {\n  readonly type: typeof FEED_GET_MESSAGE;\n  readonly payload: {\n    data: {\n      orders: TOrder[];\n      total: number;\n      totalToday: number;\n    };\n    timestamp: number;\n  };\n};\n\nexport type TFeedActions =\n  | TFeedConnectionInitAction\n  | TFeedConnectionSuccessAction\n  | TFeedConnectionErrorAction\n  | TFeedConnectionClosedAction\n  | TFeedConnectionCloseAction\n  | TFeedGetMessageAction;\n","import { getIngredients as getIngredientsApi } from \"../../utils/burger-api\";\nimport { AppThunk } from \"../store\";\n\nimport { TIngredient } from \"../../utils/types\";\n\nexport const GET_INGREDIENTS_REQUEST = \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS = \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILED = \"GET_INGREDIENTS_FAILED\";\n\nexport type TGetIngredientsRequestAction = {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n};\n\nexport type TGetIngredientsSuccessAction = {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly payload: TIngredient[];\n};\n\nexport type TGetIngredientsFailedAction = {\n  readonly type: typeof GET_INGREDIENTS_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TGetIngredientsdActions =\n  | TGetIngredientsRequestAction\n  | TGetIngredientsSuccessAction\n  | TGetIngredientsFailedAction;\n\nexport const getIngredients = (): AppThunk<Promise<unknown>> => (dispatch) => {\n  dispatch({\n    type: GET_INGREDIENTS_REQUEST,\n  });\n  return getIngredientsApi()\n    .then((ingredients) => {\n      dispatch({\n        type: GET_INGREDIENTS_SUCCESS,\n        payload: ingredients,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_INGREDIENTS_FAILED,\n        payload: err,\n      });\n    });\n};\n","import {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  TGetIngredientsdActions,\n} from \"../actions/ingredients\";\n\nimport { TIngredient } from \"../../utils/types\";\n\nexport type TGetIngredientsState = {\n  data: TIngredient[];\n  isLoading: boolean;\n  error: unknown;\n};\n\nexport const initialState: TGetIngredientsState = {\n  data: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const ingredientsReducer = (\n  state = initialState,\n  action: TGetIngredientsdActions\n): TGetIngredientsState => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        isLoading: false,\n        error: null,\n      };\n    }\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { v4 as uuid } from \"uuid\";\n\nimport { TIngredient, TConstructorIngredient } from \"../../utils/types\";\n\n/*\n    В теории курса предлагается дополнительно указывать\n    литеральный тип:\n    export const CONSTRUCTOR_ADD: 'CONSTRUCTOR_ADD' = 'CONSTRUCTOR_ADD';\n    но он не обязателен, т.к. объевление const в данном\n    случае и так будет интерпретироваться как литеральный тип\n    Поэтому достаточно: \n    const CONSTRUCTOR_ADD = 'CONSTRUCTOR_ADD';\n*/\nexport const CONSTRUCTOR_ADD = \"CONSTRUCTOR_ADD\";\nexport const CONSTRUCTOR_DELETE = \"CONSTRUCTOR_DELETE\";\nexport const CONSTRUCTOR_REORDER = \"CONSTRUCTOR_REORDER\";\nexport const CONSTRUCTOR_RESET = \"CONSTRUCTOR_RESET\";\n\nexport type TConstructorAddAction = {\n  readonly type: typeof CONSTRUCTOR_ADD;\n  readonly payload: TConstructorIngredient;\n};\n\nexport type TConstructorDeleteAction = {\n  readonly type: typeof CONSTRUCTOR_DELETE;\n  readonly payload: number;\n};\n\nexport type TConstructorReorderAction = {\n  readonly type: typeof CONSTRUCTOR_REORDER;\n  readonly payload: {\n    from: number;\n    to: number;\n  };\n};\n\nexport type TConstructorResetction = {\n  readonly type: typeof CONSTRUCTOR_RESET;\n};\n\nexport type TConstructorActions =\n  | TConstructorAddAction\n  | TConstructorDeleteAction\n  | TConstructorReorderAction\n  | TConstructorResetction;\n\nexport const addToConstructor = (\n  ingredient: TIngredient\n): TConstructorAddAction => {\n  return {\n    type: CONSTRUCTOR_ADD,\n    payload: {\n      ...ingredient,\n      id: uuid(),\n    },\n  };\n};\n","import {\n  CONSTRUCTOR_ADD,\n  CONSTRUCTOR_DELETE,\n  CONSTRUCTOR_REORDER,\n  CONSTRUCTOR_RESET,\n  TConstructorActions,\n} from \"../actions/constructor\";\n\nimport { TIngredient, TConstructorIngredient } from \"../../utils/types\";\n\nexport type TConstructorState = {\n  bun: TIngredient | null;\n  ingredients: TConstructorIngredient[];\n};\n\nexport const initialState: TConstructorState = {\n  bun: null,\n  ingredients: [],\n};\n\nexport const constructorReducer = (\n  state = initialState,\n  action: TConstructorActions\n): TConstructorState => {\n  switch (action.type) {\n    case CONSTRUCTOR_ADD: {\n      if (action.payload.type === \"bun\") {\n        return { ...state, bun: action.payload };\n      }\n      return {\n        ...state,\n        ingredients: [...state.ingredients, action.payload],\n      };\n    }\n    case CONSTRUCTOR_DELETE: {\n      return {\n        ...state,\n        ingredients: [\n          ...state.ingredients.slice(0, action.payload),\n          ...state.ingredients.slice(action.payload + 1),\n        ],\n      };\n    }\n    case CONSTRUCTOR_REORDER: {\n      const ingredients = [...state.ingredients];\n      ingredients.splice(\n        action.payload.to,\n        0,\n        ingredients.splice(action.payload.from, 1)[0]\n      );\n      return {\n        ...state,\n        ingredients,\n      };\n    }\n    case CONSTRUCTOR_RESET: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  orderBurger as orderBurgerApi,\n  getOrderByNumber as getOrderByNumberApi,\n} from \"../../utils/burger-api\";\nimport { CONSTRUCTOR_RESET } from \"./constructor\";\n\nimport { TOrder } from \"../../utils/types\";\nimport { AppThunk } from \"../store\";\n\nexport const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\";\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\nexport const CREATE_ORDER_FAILED = \"CREATE_ORDER_FAILED\";\nexport const RESET_CREATED_ORDER = \"RESET_CREATED_ORDER\";\nexport const GET_ORDER_REQUEST = \"GET_ORDER_REQUEST\";\nexport const GET_ORDER_SUCCESS = \"GET_ORDER_SUCCESS\";\nexport const GET_ORDER_FAILED = \"GET_ORDER_FAILED\";\n\nexport type TCreateOrderRequestAction = {\n  readonly type: typeof CREATE_ORDER_REQUEST;\n};\n\nexport type TCreateOrderSuccessAction = {\n  readonly type: typeof CREATE_ORDER_SUCCESS;\n  readonly payload: TOrder;\n};\n\nexport type TCreateOrderFailedAction = {\n  readonly type: typeof CREATE_ORDER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TResetCreatedOrderAction = {\n  readonly type: typeof RESET_CREATED_ORDER;\n};\n\nexport type TGetOrderRequestAction = {\n  readonly type: typeof GET_ORDER_REQUEST;\n};\n\nexport type TGetOrderSuccessAction = {\n  readonly type: typeof GET_ORDER_SUCCESS;\n  readonly payload: {\n    orders: TOrder[];\n  };\n};\n\nexport type TGetOrderFailedAction = {\n  readonly type: typeof GET_ORDER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TOrderActions =\n  | TCreateOrderRequestAction\n  | TCreateOrderSuccessAction\n  | TCreateOrderFailedAction\n  | TResetCreatedOrderAction\n  | TGetOrderRequestAction\n  | TGetOrderSuccessAction\n  | TGetOrderFailedAction;\n\nexport const orderBurger =\n  (orderData: string[]): AppThunk<Promise<unknown>> =>\n  (dispatch) => {\n    dispatch({\n      type: CREATE_ORDER_REQUEST,\n    });\n    return orderBurgerApi(orderData)\n      .then((res) => {\n        dispatch({\n          type: CREATE_ORDER_SUCCESS,\n          payload: res.order,\n        });\n        dispatch({\n          type: CONSTRUCTOR_RESET,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: CREATE_ORDER_FAILED,\n          payload: err,\n        });\n      });\n  };\n\nexport const getOrderByNumber =\n  (number: number): AppThunk<Promise<unknown>> =>\n  (dispatch) => {\n    dispatch({\n      type: GET_ORDER_REQUEST,\n    });\n    return getOrderByNumberApi(number)\n      .then((res) => {\n        dispatch({\n          type: GET_ORDER_SUCCESS,\n          payload: res,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: GET_ORDER_FAILED,\n          payload: err,\n        });\n      });\n  };\n","import {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAILED,\n  RESET_CREATED_ORDER,\n  GET_ORDER_REQUEST,\n  GET_ORDER_SUCCESS,\n  GET_ORDER_FAILED,\n  TOrderActions,\n} from \"../actions/order\";\n\nimport { TOrder } from \"../../utils/types\";\n\nexport type TOrderState = {\n  newOrderData: TOrder | null;\n  isNewOrderLoading: boolean;\n  newOrderError: unknown;\n\n  orderByNumber: TOrder | null;\n  isOrderByNumberLoading: boolean;\n  orderByNumberError: unknown;\n};\n\nexport const initialState: TOrderState = {\n  newOrderData: null,\n  isNewOrderLoading: false,\n  newOrderError: null,\n\n  orderByNumber: null,\n  isOrderByNumberLoading: false,\n  orderByNumberError: null,\n};\n\nexport const orderReducer = (\n  state = initialState,\n  action: TOrderActions\n): TOrderState => {\n  switch (action.type) {\n    case CREATE_ORDER_REQUEST: {\n      return {\n        ...state,\n        isNewOrderLoading: true,\n        newOrderError: null,\n      };\n    }\n    case CREATE_ORDER_SUCCESS: {\n      return {\n        ...state,\n        newOrderData: action.payload,\n        isNewOrderLoading: false,\n        newOrderError: null,\n      };\n    }\n    case CREATE_ORDER_FAILED: {\n      return {\n        ...state,\n        isNewOrderLoading: false,\n        newOrderError: action.payload,\n      };\n    }\n    case RESET_CREATED_ORDER: {\n      return {\n        ...state,\n        newOrderData: null,\n      };\n    }\n    case GET_ORDER_REQUEST: {\n      return {\n        ...state,\n        isOrderByNumberLoading: true,\n        orderByNumberError: null,\n      };\n    }\n    case GET_ORDER_SUCCESS: {\n      return {\n        ...state,\n        orderByNumber: action.payload.orders[0],\n        isOrderByNumberLoading: false,\n        orderByNumberError: null,\n      };\n    }\n    case GET_ORDER_FAILED: {\n      return {\n        ...state,\n        isOrderByNumberLoading: false,\n        orderByNumberError: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  ORDERS_CONNECTION_SUCCESS,\n  ORDERS_CONNECTION_ERROR,\n  ORDERS_CONNECTION_CLOSED,\n  ORDERS_GET_MESSAGE,\n  TOrdersActions,\n} from \"../actions/orders\";\n\nimport { TOrder } from \"../../utils/types\";\n\nexport type TOrdersState = {\n  data: TOrder[];\n  isOpen: boolean;\n  error: unknown;\n};\n\nexport const initialState: TOrdersState = {\n  data: [],\n  isOpen: false,\n  error: null,\n};\n\nexport const ordersReducer = (\n  state = initialState,\n  action: TOrdersActions\n): TOrdersState => {\n  switch (action.type) {\n    case ORDERS_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        isOpen: true,\n        error: null,\n      };\n    }\n    case ORDERS_CONNECTION_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case ORDERS_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        isOpen: false,\n      };\n    }\n    case ORDERS_GET_MESSAGE: {\n      return {\n        ...state,\n        data: action.payload.data.orders,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  FEED_CONNECTION_SUCCESS,\n  FEED_CONNECTION_ERROR,\n  FEED_CONNECTION_CLOSED,\n  FEED_GET_MESSAGE,\n  TFeedActions,\n} from \"../actions/feed\";\n\nimport { TOrder } from \"../../utils/types\";\n\nexport type TFeedState = {\n  orders: TOrder[];\n  total: number;\n  totalToday: number;\n  isOpen: boolean;\n  error: Event | null;\n};\n\nexport const initialState: TFeedState = {\n  orders: [],\n  total: 0,\n  totalToday: 0,\n  isOpen: false,\n  error: null,\n};\n\nexport const feedReducer = (\n  state = initialState,\n  action: TFeedActions\n): TFeedState => {\n  switch (action.type) {\n    case FEED_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        isOpen: true,\n        error: null,\n      };\n    }\n    case FEED_CONNECTION_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case FEED_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        isOpen: false,\n      };\n    }\n    case FEED_GET_MESSAGE: {\n      return {\n        ...state,\n        orders: action.payload.data.orders,\n        total: action.payload.data.total,\n        totalToday: action.payload.data.totalToday,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  registerUser as registerUserApi,\n  loginUser as loginUserApi,\n  getUser as getUserApi,\n  updateUser as updateUserApi,\n  logout as logoutApi,\n} from \"../../utils/burger-api\";\nimport { setCookie, getCookie, deleteCookie } from \"../../utils/cookie\";\nimport { TRegisterData } from \"../../utils/burger-api\";\nimport { TUser } from \"../../utils/types\";\nimport { AppThunk } from \"../store\";\n\nexport const AUTH_CHECKED = \"AUTH_CHECKED\";\nexport const REGISTER_USER_REQUEST = \"REGISTER_USER_REQUEST\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAILED = \"REGISTER_USER_FAILED\";\nexport const LOGIN_USER_REQUEST = \"LOGIN_USER_REQUEST\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAILED = \"LOGIN_USER_FAILED\";\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILED = \"GET_USER_FAILED\";\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILED = \"UPDATE_USER_FAILED\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport type TAuthCheckedAction = {\n  readonly type: typeof AUTH_CHECKED;\n};\n\nexport type TRegisterUserRequestAction = {\n  readonly type: typeof REGISTER_USER_REQUEST;\n};\n\nexport type TRegisterUserSuccessAction = {\n  readonly type: typeof REGISTER_USER_SUCCESS;\n  readonly payload: TUser;\n};\n\nexport type TRegisterUserFailedAction = {\n  readonly type: typeof REGISTER_USER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TLoginUserRequestAction = {\n  readonly type: typeof LOGIN_USER_REQUEST;\n};\n\nexport type TLoginUserSuccessAction = {\n  readonly type: typeof LOGIN_USER_SUCCESS;\n  readonly payload: TUser;\n};\n\nexport type TLoginUserFailedAction = {\n  readonly type: typeof LOGIN_USER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TGetUserRequestAction = {\n  readonly type: typeof GET_USER_REQUEST;\n};\n\nexport type TGetUserSuccessAction = {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly payload: TUser;\n};\n\nexport type TGetUserFailedAction = {\n  readonly type: typeof GET_USER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TUpdateUserRequestAction = {\n  readonly type: typeof UPDATE_USER_REQUEST;\n};\n\nexport type TUpdateUserSuccessAction = {\n  readonly type: typeof UPDATE_USER_SUCCESS;\n  readonly payload: TUser;\n};\n\nexport type TUpdateUserFailedAction = {\n  readonly type: typeof UPDATE_USER_FAILED;\n  readonly payload: unknown;\n};\n\nexport type TUserLogoutdAction = {\n  readonly type: typeof USER_LOGOUT;\n};\n\nexport type TUserActions =\n  | TAuthCheckedAction\n  | TRegisterUserRequestAction\n  | TRegisterUserSuccessAction\n  | TRegisterUserFailedAction\n  | TLoginUserRequestAction\n  | TLoginUserSuccessAction\n  | TLoginUserFailedAction\n  | TGetUserRequestAction\n  | TGetUserSuccessAction\n  | TGetUserFailedAction\n  | TUpdateUserRequestAction\n  | TUpdateUserSuccessAction\n  | TUpdateUserFailedAction\n  | TUserLogoutdAction;\n\n/* проверка авторизации выполняется запросом данных пользователя\n   при налиции токена. Если сервер отвечает, значит токен корректен */\nexport const checkUserAuth = (): AppThunk => (dispatch) => {\n  if (getCookie(\"accessToken\")) {\n    dispatch(getUser()).finally(() => {\n      dispatch({ type: AUTH_CHECKED });\n    });\n  } else {\n    dispatch({ type: AUTH_CHECKED });\n  }\n};\n\nexport const logoutUser = (): AppThunk<Promise<unknown>> => (dispatch) => {\n  return logoutApi()\n    .then(() => {\n      localStorage.clear();\n      deleteCookie(\"accessToken\");\n      dispatch({ type: USER_LOGOUT });\n    })\n    .catch(() => {\n      alert(\"Ошибка выполнения выхода\");\n    });\n};\n\nexport const registerUser =\n  (email: string, name: string, password: string): AppThunk<Promise<unknown>> =>\n  (dispatch) => {\n    dispatch({\n      type: REGISTER_USER_REQUEST,\n    });\n    return registerUserApi({ email, name, password })\n      .then((res) => {\n        setCookie(\"accessToken\", res.accessToken);\n        localStorage.setItem(\"refreshToken\", res.refreshToken);\n        dispatch({\n          type: REGISTER_USER_SUCCESS,\n          payload: res.user,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: REGISTER_USER_FAILED,\n          payload: err.message,\n        });\n      });\n  };\n\nexport const loginUser =\n  (email: string, password: string): AppThunk<Promise<unknown>> =>\n  (dispatch) => {\n    dispatch({\n      type: LOGIN_USER_REQUEST,\n    });\n    return loginUserApi({ email, password })\n      .then((res) => {\n        setCookie(\"accessToken\", res.accessToken);\n        localStorage.setItem(\"refreshToken\", res.refreshToken);\n        dispatch({\n          type: LOGIN_USER_SUCCESS,\n          payload: res.user,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: LOGIN_USER_FAILED,\n          payload: err.message,\n        });\n      });\n  };\n\nexport const getUser = (): AppThunk<Promise<unknown>> => (dispatch) => {\n  dispatch({\n    type: GET_USER_REQUEST,\n  });\n  return getUserApi()\n    .then((res) => {\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res.user,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_USER_FAILED,\n        payload: err.message,\n      });\n    });\n};\n\nexport const updateUser =\n  (data: Partial<TRegisterData>): AppThunk<Promise<unknown>> =>\n  (dispatch) => {\n    dispatch({\n      type: UPDATE_USER_REQUEST,\n    });\n    return updateUserApi(data)\n      .then((res) => {\n        dispatch({\n          type: UPDATE_USER_SUCCESS,\n          payload: res.user,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: UPDATE_USER_FAILED,\n          payload: err.message,\n        });\n      });\n  };\n","import { TUser } from \"../../utils/types\";\nimport {\n  AUTH_CHECKED,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAILED,\n  USER_LOGOUT,\n  TUserActions,\n} from \"../actions/user\";\n\nexport type TUserState = {\n  isAuthChecked: boolean;\n  data: TUser | null;\n  registerUserError: unknown;\n  registerUserRequest: boolean;\n  loginUserError: unknown;\n  loginUserRequest: boolean;\n  updateUserError: unknown;\n  updateUserRequest: boolean;\n  getUserError: unknown;\n  getUserRequest: boolean;\n};\n\nexport const initialState: TUserState = {\n  isAuthChecked: false,\n  data: null,\n  registerUserError: null,\n  registerUserRequest: false,\n  loginUserError: null,\n  loginUserRequest: false,\n  updateUserError: null,\n  updateUserRequest: false,\n  getUserError: null,\n  getUserRequest: false,\n};\n\nexport const userReducer = (\n  state = initialState,\n  action: TUserActions\n): TUserState => {\n  switch (action.type) {\n    case AUTH_CHECKED: {\n      return {\n        ...state,\n        isAuthChecked: true,\n      };\n    }\n    case USER_LOGOUT: {\n      return {\n        ...state,\n        data: null,\n      };\n    }\n    case REGISTER_USER_REQUEST: {\n      return {\n        ...state,\n        registerUserRequest: true,\n        registerUserError: null,\n      };\n    }\n    case REGISTER_USER_SUCCESS: {\n      return {\n        ...state,\n        registerUserRequest: false,\n        data: action.payload,\n        isAuthChecked: true,\n      };\n    }\n    case REGISTER_USER_FAILED: {\n      return {\n        ...state,\n        registerUserRequest: false,\n        registerUserError: action.payload,\n      };\n    }\n    case LOGIN_USER_REQUEST: {\n      return {\n        ...state,\n        loginUserRequest: true,\n        loginUserError: null,\n      };\n    }\n    case LOGIN_USER_SUCCESS: {\n      return {\n        ...state,\n        loginUserRequest: false,\n        data: action.payload,\n        isAuthChecked: true,\n      };\n    }\n    case LOGIN_USER_FAILED: {\n      return {\n        ...state,\n        loginUserRequest: false,\n        loginUserError: action.payload,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        getUserRequest: false,\n        data: action.payload,\n      };\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserError: action.payload,\n      };\n    }\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n        getUserError: null,\n      };\n    }\n    case UPDATE_USER_REQUEST: {\n      return {\n        ...state,\n        updateUserRequest: true,\n        updateUserError: null,\n      };\n    }\n    case UPDATE_USER_SUCCESS: {\n      return {\n        ...state,\n        updateUserRequest: false,\n        data: action.payload,\n      };\n    }\n    case UPDATE_USER_FAILED: {\n      return {\n        ...state,\n        updateUserRequest: false,\n        updateUserError: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { ingredientsReducer } from \"./ingredients\";\nimport { constructorReducer } from \"./constructor\";\nimport { orderReducer } from \"./order\";\nimport { ordersReducer } from \"./orders\";\nimport { feedReducer } from \"./feed\";\nimport { userReducer } from \"./user\";\n\nexport default combineReducers({\n  ingredients: ingredientsReducer,\n  burgerConstructor: constructorReducer,\n  order: orderReducer,\n  orders: ordersReducer,\n  feed: feedReducer,\n  user: userReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk, { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { socketMiddleware } from \"./middleware/socket-middleware\";\n\nimport {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook,\n} from \"react-redux\";\n\nimport {\n  ORDERS_CONNECTION_INIT,\n  ORDERS_CONNECTION_SUCCESS,\n  ORDERS_CONNECTION_ERROR,\n  ORDERS_CONNECTION_CLOSED,\n  ORDERS_CONNECTION_CLOSE,\n  ORDERS_GET_MESSAGE,\n  TOrdersActions,\n} from \"./actions/orders\";\n\nimport {\n  FEED_CONNECTION_INIT,\n  FEED_CONNECTION_SUCCESS,\n  FEED_CONNECTION_ERROR,\n  FEED_CONNECTION_CLOSED,\n  FEED_CONNECTION_CLOSE,\n  FEED_GET_MESSAGE,\n  TFeedActions,\n} from \"./actions/feed\";\n\nimport rootReducer from \"./reducers\";\nimport { TConstructorActions } from \"./actions/constructor\";\nimport { TGetIngredientsdActions } from \"./actions/ingredients\";\nimport { TOrderActions } from \"./actions/order\";\nimport { TUserActions } from \"./actions/user\";\n\nconst ordersWsActions = {\n  wsInit: ORDERS_CONNECTION_INIT,\n  wsClose: ORDERS_CONNECTION_CLOSE,\n  onOpen: ORDERS_CONNECTION_SUCCESS,\n  onClose: ORDERS_CONNECTION_CLOSED,\n  onError: ORDERS_CONNECTION_ERROR,\n  onMessage: ORDERS_GET_MESSAGE,\n};\n\nconst feedWsActions = {\n  wsInit: FEED_CONNECTION_INIT,\n  wsClose: FEED_CONNECTION_CLOSE,\n  onOpen: FEED_CONNECTION_SUCCESS,\n  onClose: FEED_CONNECTION_CLOSED,\n  onError: FEED_CONNECTION_ERROR,\n  onMessage: FEED_GET_MESSAGE,\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunk,\n      socketMiddleware(ordersWsActions),\n      socketMiddleware(feedWsActions)\n    )\n  )\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\ntype TApplicationActions =\n  | TConstructorActions\n  | TFeedActions\n  | TGetIngredientsdActions\n  | TOrdersActions\n  | TOrderActions\n  | TUserActions;\n\n/*\n  Тут описание типизации отличается от того, что дается в теории.\n  Там для AppThunk зачем то используется тип ActionCreator, что в результате \n  приводит к неправильно типизации диспатча и он не строго контролирует экшены\n  Ниже приведен рабочий код, советовать его в \"Можно лучше\"\n */\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  TApplicationActions\n>;\n\nexport type AppDispatch = ThunkDispatch<RootState, never, TApplicationActions>;\n\nexport const useDispatch = () => dispatchHook<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\nexport default store;\n","import { NavLink, useRouteMatch } from \"react-router-dom\";\nimport {\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n  Logo,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./app-header.module.css\";\n\nimport { useSelector } from \"../../services/store\";\n\nconst AppHeader = () => {\n  const isConstructor = !!useRouteMatch({ path: \"/\", exact: true });\n  const isFeed = !!useRouteMatch(\"/feed\");\n  const isProfile = !!useRouteMatch(\"/profile\");\n\n  /* В макете и задании не сказано, что нужно отображать имя пользователя в шапке\n     но это допускается */\n  const userName = useSelector((state) => state.user.data?.name);\n\n  return (\n    <header className={styles.header}>\n      <nav className={`${styles.menu} pt-4 pb-4`}>\n        <div className={styles.menu_part_left}>\n          <NavLink\n            to=\"/\"\n            className={styles.link}\n            activeClassName={styles.link_active}\n            exact\n          >\n            <BurgerIcon type={isConstructor ? \"primary\" : \"secondary\"} />\n            <p\n              className=\"text text_type_main-default ml-2\"\n              data-cy=\"mainpage-link\"\n            >\n              Конструктор\n            </p>\n          </NavLink>\n          <NavLink\n            to=\"/feed\"\n            className={`${styles.link} ml-10`}\n            activeClassName={styles.link_active}\n          >\n            <ListIcon type={isFeed ? \"primary\" : \"secondary\"} />\n            <p className=\"text text_type_main-default ml-2\">Лента заказов</p>\n          </NavLink>\n        </div>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n        <NavLink\n          to=\"/profile\"\n          className={`${styles.link} ${styles.link_position_last}`}\n          activeClassName={styles.link_active}\n        >\n          <ProfileIcon type={isProfile ? \"primary\" : \"secondary\"} />\n          <p\n            className=\"text text_type_main-default ml-2\"\n            data-cy=\"profile-link\"\n          >\n            {userName || \"Личный кабинет\"}\n          </p>\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Counter,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./burger-ingredient.module.css\";\n\nimport { TIngredient } from \"../../utils/types\";\n\ntype TBurgerIngredientProps = {\n  ingredient: TIngredient;\n  count: number;\n};\n\nconst BurgerIngredient: React.FC<TBurgerIngredientProps> = ({\n  ingredient,\n  count,\n}) => {\n  const location = useLocation();\n  const { image, price, name, _id } = ingredient;\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: \"NEW_INGREDIENT\",\n    item: ingredient,\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n      handlerId: monitor.getHandlerId(),\n    }),\n  }));\n  const opacity = isDragging ? 0.4 : 1;\n\n  return (\n    <Link\n      className={styles.article}\n      to={{\n        pathname: `/ingredients/${_id}`,\n        state: { background: location },\n      }}\n      style={{ opacity }}\n      ref={drag}\n    >\n      {count && <Counter count={count} />}\n      <img className={styles.img} src={image} alt=\"картинка ингредиента.\" />\n      <div className={`${styles.cost} mt-2 mb-2`}>\n        <p className=\"text text_type_digits-default mr-2\">{price}</p>\n        <CurrencyIcon type=\"primary\"/>\n      </div>\n      <p className={`text text_type_main-default ${styles.text}`}>{name}</p>\n    </Link>\n  );\n};\n\n//export default BurgerIngredient;\nexport default React.memo(BurgerIngredient);\n","import React, { useMemo } from \"react\";\n\nimport styles from \"./ingredients-category.module.css\";\n\nimport BurgerIngredient from \"../burger-ingredient/burger-ingredient\";\n\nimport { useSelector } from \"../../services/store\";\nimport { TIngredient } from \"../../utils/types\";\n\ntype TIngredientsCategoryProps = {\n  title: string;\n  titleId: string;\n  ingredients: TIngredient[];\n};\n\nconst IngredientsCategory = React.forwardRef<\n  HTMLDivElement,\n  TIngredientsCategoryProps\n>(({ title, titleId, ingredients }, ref) => {\n  const burgerConstructor = useSelector((state) => state.burgerConstructor);\n\n  /* рассчет счетчиков ингредиентов в заказе */\n  const ingredientsCounters = useMemo(() => {\n    const { bun, ingredients } = burgerConstructor;\n    const counters: { [key: string]: number } = {};\n    ingredients.forEach((ingredient) => {\n      if (!counters[ingredient._id]) counters[ingredient._id] = 0;\n      counters[ingredient._id]++;\n    });\n    if (bun) counters[bun._id] = 2;\n    return counters;\n  }, [burgerConstructor]);\n\n  return (\n    <>\n      <h3 className=\"text text_type_main-medium mt-10 mb-6\" id={titleId}>\n        {title}\n      </h3>\n      <div className={styles.items} ref={ref}>\n        {ingredients.map((ingredient) => {\n          return (\n            <BurgerIngredient\n              ingredient={ingredient}\n              key={ingredient._id}\n              count={ingredientsCounters[ingredient._id]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n});\n\n//export default IngredientsCategory;\nexport default React.memo(IngredientsCategory);\n","import React, { useMemo } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./burger-ingredients.module.css\";\n\nimport IngredientsCategory from \"../ingredients-category/ingredients-category\";\n\nimport { useSelector } from \"../../services/store\";\n\nconst BurgerIngredients = () => {\n  const [currentTab, setCurrentTab] = React.useState(\"buns\");\n\n  const ingredients = useSelector((state) => state.ingredients.data);\n\n  const [bunsRef, inViewBuns] = useInView({\n    threshold: 0,\n  });\n\n  const [mainsRef, inViewFilling] = useInView({\n    threshold: 0,\n  });\n  const [saucesRef, inViewSauces] = useInView({\n    threshold: 0,\n  });\n\n  React.useEffect(() => {\n    if (inViewBuns) {\n      setCurrentTab(\"buns\");\n    } else if (inViewSauces) {\n      setCurrentTab(\"sauces\");\n    } else if (inViewFilling) {\n      setCurrentTab(\"mains\");\n    }\n  }, [inViewBuns, inViewFilling, inViewSauces]);\n\n  /* В можно лучше: скролл к разделу при клике на таб */\n  const onTabClick = (tab: string) => {\n    setCurrentTab(tab);\n    const element = document.getElementById(tab);\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const buns = useMemo(\n    () => ingredients.filter((item) => item.type === \"bun\"),\n    [ingredients]\n  );\n\n  const mains = useMemo(\n    () => ingredients.filter((item) => item.type === \"main\"),\n    [ingredients]\n  );\n\n  const sauces = useMemo(\n    () => ingredients.filter((item) => item.type === \"sauce\"),\n    [ingredients]\n  );\n\n  return (\n    <>\n      <section className={styles.burger_ingredients}>\n        <nav>\n          <ul className={styles.menu}>\n            <Tab\n              value=\"buns\"\n              active={currentTab === \"buns\"}\n              onClick={onTabClick}\n            >\n              Булки\n            </Tab>\n            <Tab\n              value=\"mains\"\n              active={currentTab === \"mains\"}\n              onClick={onTabClick}\n            >\n              Начинки\n            </Tab>\n            <Tab\n              value=\"sauces\"\n              active={currentTab === \"sauces\"}\n              onClick={onTabClick}\n            >\n              Соусы\n            </Tab>\n          </ul>\n        </nav>\n        <div className={styles.content} data-cy=\"ingredients\">\n          <IngredientsCategory\n            title=\"Булки\"\n            titleId=\"buns\"\n            ingredients={buns}\n            ref={bunsRef}\n          />\n          <IngredientsCategory\n            title=\"Начинки\"\n            titleId=\"mains\"\n            ingredients={mains}\n            ref={mainsRef}\n          />\n          <IngredientsCategory\n            title=\"Соусы\"\n            titleId=\"sauces\"\n            ingredients={sauces}\n            ref={saucesRef}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default BurgerIngredients;\n","import styles from \"./modal-overlay.module.css\";\n\nexport const ModalOverlay = ({ onClick }: { onClick: () => void }) => {\n  return <div className={styles.overlay} onClick={onClick} data-cy=\"modal-overlay\"/>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport styles from \"./modal.module.css\";\n\nimport { ModalOverlay } from \"../modal-overlay/modal-overlay\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst modalRoot = document.getElementById(\"modals\");\n\ntype TModalProps = {\n  title: string;\n  onClose: () => void;\n};\n\nconst Modal: React.FC<TModalProps> = ({ title, onClose, children }) => {\n  React.useEffect(() => {\n    const handleEsc = (e: KeyboardEvent) => {\n      e.key === \"Escape\" && onClose();\n    };\n\n    document.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [onClose]);\n\n  return ReactDOM.createPortal(\n    <>\n      <div className={styles.modal}>\n        <div className={styles.header}>\n          <h3 className={`${styles.title} text text_type_main-large`}>\n            {title}\n          </h3>\n          <button className={styles.button} type=\"button\" aria-label=\"закрыть\">\n            <CloseIcon type=\"primary\" onClick={onClose} />\n          </button>\n        </div>\n        <div className={styles.content}>{children}</div>\n      </div>\n      <ModalOverlay onClick={onClose} />\n    </>,\n    modalRoot as HTMLDivElement\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/done.85c3a14d.svg\";","import styles from \"./order-details.module.css\";\nimport doneImg from \"../../images/done.svg\";\n\ntype TOrderDetailsProps = {\n  orderNumber: number;\n};\n\nconst OrderDetails: React.FC<TOrderDetailsProps> = ({ orderNumber }) => {\n  return (\n    <>\n      <h2\n        className={`${styles.title} text text_type_digits-large mt-2 mb-4`}\n        data-cy=\"order-number\"\n      >\n        {orderNumber}\n      </h2>\n      <p className=\"text text_type_main-medium\">идентификатор заказа</p>\n      <img\n        className={styles.img}\n        src={doneImg}\n        alt=\"изображение статуса заказа.\"\n      />\n      <p className=\"text text_type_main-default mb-1\">\n        Ваш заказ начали готовить\n      </p>\n      <p className={`${styles.text} text text_type_main-default`}>\n        Дождитесь готовности на орбитальной станции\n      </p>\n    </>\n  );\n};\n\nexport default OrderDetails;\n","import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport {\n  ConstructorElement,\n  DragIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./burger-constructor-element.module.css\";\n\nimport { useDispatch } from \"../../services/store\";\nimport {\n  CONSTRUCTOR_REORDER,\n  CONSTRUCTOR_DELETE,\n} from \"../../services/actions/constructor\";\nimport { TConstructorIngredient } from \"../../utils/types\";\n\ntype BurgerConstructorElementProps = {\n  ingredient: TConstructorIngredient;\n  index: number;\n};\n\nconst BurgerConstructorElement: React.FC<BurgerConstructorElementProps> = ({\n  ingredient,\n  index,\n}) => {\n  const dispatch = useDispatch();\n\n  const ref = useRef<HTMLLIElement>(null);\n  const [{ handlerId }, drop] = useDrop({\n    accept: [\"SORT_INGREDIENT\"],\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(\n      item: {\n        ingredient: TConstructorIngredient;\n        index: number;\n      },\n      monitor\n    ) {\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n      if (!hoverBoundingRect || !clientOffset) return;\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      dispatch({\n        type: CONSTRUCTOR_REORDER,\n        payload: {\n          from: dragIndex,\n          to: hoverIndex,\n        },\n      });\n      item.index = hoverIndex;\n    },\n  });\n  const [{ isDragging }, drag] = useDrag({\n    type: \"SORT_INGREDIENT\",\n    item: () => {\n      return { ingredient, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  return (\n    <li\n      className={`${styles.element} mb-4 mr-2`}\n      style={{ opacity }}\n      data-handler-id={handlerId}\n      ref={ref}\n    >\n      <DragIcon type=\"primary\" />\n      <div className={`${styles.element_fullwidth} ml-2`}>\n        <ConstructorElement\n          text={ingredient.name}\n          price={ingredient.price}\n          thumbnail={ingredient.image}\n          handleClose={() =>\n            dispatch({\n              type: CONSTRUCTOR_DELETE,\n              payload: index,\n            })\n          }\n        />\n      </div>\n    </li>\n  );\n};\n\nexport default React.memo(BurgerConstructorElement);\n","import styles from \"./preloader.module.css\";\n\nconst Preloader = () => {\n  return (\n    <div className={styles.preloader}>\n      <div className={styles.preloader_circle}></div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import { useMemo } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useHistory } from \"react-router\";\nimport {\n  Button,\n  ConstructorElement,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./burger-constructor.module.css\";\n\nimport Modal from \"../modal/modal\";\nimport OrderDetails from \"../order-details/order-details\";\nimport BurgerConstructorElement from \"../burger-constructor-element/burger-constructor-element\";\nimport Preloader from \"../preloader/preloader\";\n\nimport { useDispatch, useSelector } from \"../../services/store\";\nimport { addToConstructor } from \"../../services/actions/constructor\";\nimport { orderBurger, RESET_CREATED_ORDER } from \"../../services/actions/order\";\nimport { TIngredient } from \"../../utils/types\";\n\nconst BurgerConstructor = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const constructorItems = useSelector((state) => state.burgerConstructor);\n  const orderRequest = useSelector((state) => state.order.isNewOrderLoading);\n  const orderModalData = useSelector((state) => state.order.newOrderData);\n  const user = useSelector((state) => state.user.data);\n\n  const [{ canDrop, dragItem }, drop] = useDrop(() => ({\n    accept: \"NEW_INGREDIENT\",\n    drop: (item: TIngredient) => dispatch(addToConstructor(item)),\n    collect: (monitor) => ({\n      canDrop: monitor.canDrop(),\n      dragItem: monitor.getItem(),\n      isOver: monitor.isOver(),\n    }),\n  }));\n\n  const dragBuns = canDrop && dragItem && dragItem.type === \"bun\";\n  const dragIngredients = canDrop && dragItem && dragItem.type !== \"bun\";\n\n  const onOrderClick = () => {\n    if (!user) {\n      history.push(\"/login\");\n      return;\n    }\n\n    if (!constructorItems.bun || orderRequest) return;\n\n    dispatch(\n      orderBurger([\n        constructorItems.bun._id,\n        ...constructorItems.ingredients.map((ing) => ing._id),\n        constructorItems.bun._id,\n      ])\n    );\n  };\n  const closeOrderModal = () => dispatch({ type: RESET_CREATED_ORDER });\n\n  /*\n    Это предпочтительная реализация выполнения подсчета стоимости\n    Использовать для подсчета стоимости useReducer как \n    предложено в задании не имеет смысла\n  */\n  const price = useMemo(() => {\n    return (\n      (constructorItems.bun ? constructorItems.bun.price * 2 : 0) +\n      constructorItems.ingredients.reduce((s, v) => s + v.price, 0)\n    );\n  }, [constructorItems]);\n\n  return (\n    <section\n      className={styles.burger_constructor}\n      ref={drop}\n      data-cy=\"constructor\"\n    >\n      {constructorItems.bun ? (\n        <div\n          className={`${styles.element} mb-4 mr-4`}\n          data-cy=\"constructor-bun-1\"\n        >\n          <ConstructorElement\n            type=\"top\"\n            isLocked={true}\n            text={`${constructorItems.bun.name} (верх)`}\n            price={constructorItems.bun.price}\n            thumbnail={constructorItems.bun.image}\n          />\n        </div>\n      ) : (\n        <div\n          className={`${styles.noBuns} ${dragBuns && styles.dragActive} ${\n            styles.noBunsTop\n          } ml-8 mb-4 mr-5 text text_type_main-default`}\n        >\n          Выберите булки\n        </div>\n      )}\n      <ul className={styles.elements} data-cy=\"constructor-ingredients\">\n        {constructorItems.ingredients.length > 0 ? (\n          constructorItems.ingredients.map((item, index) => {\n            return (\n              <BurgerConstructorElement\n                ingredient={item}\n                index={index}\n                key={item.id}\n              />\n            );\n          })\n        ) : (\n          <div\n            className={`${styles.noBuns} ${\n              dragIngredients && styles.dragActive\n            } ml-8 mb-4 mr-5 text text_type_main-default`}\n          >\n            Выберите начинку\n          </div>\n        )}\n      </ul>\n      {constructorItems.bun ? (\n        <div\n          className={`${styles.element} mt-4 mr-4`}\n          data-cy=\"constructor-bun-2\"\n        >\n          <ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={`${constructorItems.bun.name} (низ)`}\n            price={constructorItems.bun.price}\n            thumbnail={constructorItems.bun.image}\n          />\n        </div>\n      ) : (\n        <div\n          className={`${styles.noBuns} ${dragBuns && styles.dragActive} ${\n            styles.noBunsBottom\n          } ml-8 mb-4 mr-5 text text_type_main-default`}\n        >\n          Выберите булки\n        </div>\n      )}\n      <div className={`${styles.total} mt-10 mr-4`} data-cy=\"order-summ\">\n        <div className={`${styles.cost} mr-10`}>\n          <p className={`text ${styles.text} mr-2`}>{price}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          children=\"Оформить заказ\"\n          onClick={onOrderClick}\n        />\n      </div>\n      {/* Прелоадер в данном месте в \"Можно лучше\" */}\n      {orderRequest && (\n        <Modal onClose={closeOrderModal} title={\"Оформляем заказ...\"}>\n          <Preloader />\n        </Modal>\n      )}\n\n      {orderModalData && (\n        <Modal\n          onClose={closeOrderModal}\n          title={orderRequest ? \"Оформляем заказ...\" : \"\"}\n        >\n          <OrderDetails orderNumber={orderModalData.number} />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","import { useSelector } from \"../../services/store\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport styles from \"./main.module.css\";\n\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\nimport Preloader from \"../../components/preloader/preloader\";\n\nconst ConstructorPage = () => {\n  const isIngredientsLoading = useSelector(\n    (state) => state.ingredients.isLoading\n  );\n\n  if (isIngredientsLoading) {\n    return <Preloader />;\n  }\n\n  return (\n    <main className={styles.containerMain}>\n      <h1 className={`${styles.title} text text_type_main-large mt-10 mb-5`}>\n        Соберите бургер\n      </h1>\n      <DndProvider backend={HTML5Backend}>\n        <div className={`${styles.main}`}>\n          <BurgerIngredients />\n          <BurgerConstructor />\n        </div>\n      </DndProvider>\n    </main>\n  );\n};\n\nexport default ConstructorPage;\n","import { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"../common.module.css\";\n\nimport { useDispatch, useSelector } from \"../../services/store\";\nimport { registerUser } from \"../../services/actions/user\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const error = useSelector((state) => state.user.registerUserError);\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    dispatch(registerUser(email, userName, password));\n  };\n\n  /*\n    Отображение ошибок и валидация форм в \"можно лучше\"\n  */\n  return (\n    <main className={styles.container}>\n      <div className={`pt-6 ${styles.wrapCenter}`}>\n        <h3 className=\"pb-6 text text_type_main-medium\">Регистрация</h3>\n        <form\n          className={`pb-15 ${styles.form}`}\n          name=\"register\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"pb-6\">\n            <Input\n              type=\"text\"\n              placeholder=\"Имя\"\n              onChange={(e) => setUserName(e.target.value)}\n              value={userName}\n              name=\"name\"\n              error={false}\n              errorText=\"\"\n              size=\"default\"\n            />\n          </div>\n          <div className=\"pb-6\">\n            <Input\n              type=\"email\"\n              placeholder=\"E-mail\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              name={\"email\"}\n              error={false}\n              errorText=\"\"\n              size={\"default\"}\n            />\n          </div>\n          <div className=\"pb-6\">\n            <PasswordInput\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              name=\"password\"\n            />\n          </div>\n          <div className={`pb-6 ${styles.button}`}>\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\n              Зарегистрироваться\n            </Button>\n          </div>\n          {error && (\n            <p className={`${styles.error} text text_type_main-default pb-6`}>\n              {error as string}\n            </p>\n          )}\n        </form>\n        <div className={`${styles.question} text text_type_main-default pb-6`}>\n          Уже зарегистрированы?\n          <Link to=\"/login\" className={`pl-2 ${styles.link}`}>\n            Войти\n          </Link>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Register;\n","import { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"../common.module.css\";\n\nimport { useDispatch, useSelector } from \"../../services/store\";\nimport { loginUser } from \"../../services/actions/user\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const error = useSelector((state) => state.user.loginUserError);\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    dispatch(loginUser(email, password));\n  };\n\n  /*\n    Отображение ошибок и валидация форм в \"можно лучше\"\n  */\n  return (\n    <main className={styles.container}>\n      <div className={`pt-6 ${styles.wrapCenter}`}>\n        <h3 className=\"pb-6 text text_type_main-medium\">Вход</h3>\n        <form\n          className={`pb-15 ${styles.form}`}\n          name=\"login\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"pb-6\">\n            <Input\n              type=\"email\"\n              placeholder=\"E-mail\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              name=\"email\"\n              error={false}\n              errorText=\"\"\n              size=\"default\"\n            />\n          </div>\n          <div className=\"pb-6\">\n            <PasswordInput\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              name=\"password\"\n            />\n          </div>\n          <div className={`pb-6 ${styles.button}`}>\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\n              Войти\n            </Button>\n          </div>\n          {error && (\n            <p className={`${styles.error} text text_type_main-default pb-6`}>\n              {error as string}\n            </p>\n          )}\n        </form>\n        <div className={`pb-4 ${styles.question} text text_type_main-default`}>\n          Вы - новый пользователь?\n          <Link to=\"/register\" className={`pl-2 ${styles.link}`}>\n            Зарегистрироваться\n          </Link>\n        </div>\n        <div className={`${styles.question} text text_type_main-default pb-6`}>\n          Забыли пароль?\n          <Link to={\"/forgot-password\"} className={`pl-2 ${styles.link}`}>\n            Восстановить пароль\n          </Link>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Input,\n  Button,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"../common.module.css\";\n\nimport { forgotPassword as forgotPasswordApi } from \"../../utils/burger-api\";\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState<Error | null>(null);\n\n  const history = useHistory();\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    /*\n      Здесь допускается не использовать redux для\n      выполнения запроса\n    */\n    setError(null);\n    forgotPasswordApi({ email })\n      .then(() => {\n        localStorage.setItem(\"resetPassword\", \"true\");\n        history.replace(\"/reset-password\");\n      })\n      .catch((err) => setError(err));\n  };\n\n  return (\n    <main className={styles.container}>\n      <div className={`pt-6 ${styles.wrapCenter}`}>\n        <h3 className=\"pb-6 text text_type_main-medium\">\n          Восстановление пароля\n        </h3>\n        <form\n          className={`pb-15 ${styles.form}`}\n          name=\"login\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"pb-6\">\n            <Input\n              type=\"email\"\n              placeholder=\"Укажите e-mail\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              name=\"email\"\n              error={false}\n              errorText=\"\"\n              size=\"default\"\n            />\n          </div>\n          <div className={`pb-6 ${styles.button}`}>\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\n              Восстановить\n            </Button>\n          </div>\n          {error && (\n            <p className={`${styles.error} text text_type_main-default pb-6`}>\n              {error}\n            </p>\n          )}\n        </form>\n        <div className={`${styles.question} text text_type_main-default pb-6`}>\n          Вспомнили пароль?\n          <Link to={\"/login\"} className={`pl-2 ${styles.link}`}>\n            Войти\n          </Link>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default ForgotPassword;\n","import { NavLink, useLocation } from \"react-router-dom\";\n\nimport styles from \"./profile-menu.module.css\";\n\nimport { useDispatch } from \"../../services/store\";\nimport { logoutUser } from \"../../services/actions/user\";\n\nconst ProfileMenu = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n  };\n\n  return (\n    <>\n      <NavLink\n        exact\n        to={\"/profile\"}\n        activeClassName={styles.activeLink}\n        className={`text text_type_main-medium text_color_inactive pt-4 pb-4 ${styles.link}`}\n      >\n        Профиль\n      </NavLink>\n      <NavLink\n        exact\n        to={\"/profile/orders\"}\n        activeClassName={styles.activeLink}\n        className={`text text_type_main-medium text_color_inactive pt-4 pb-4 ${styles.link}`}\n      >\n        История заказов\n      </NavLink>\n      <button\n        className={`text text_type_main-medium text_color_inactive pt-4 pb-4 ${styles.button}`}\n        onClick={handleLogout}\n      >\n        Выход\n      </button>\n      <p className=\"pt-20 text text_type_main-default text_color_inactive\">\n        {location.pathname === \"/profile\"\n          ? \"В этом разделе вы можете изменить свои персональные данные\"\n          : \"В этом разделе вы можете просмотреть свою историю заказов\"}\n      </p>\n    </>\n  );\n};\n\nexport default ProfileMenu;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"../../services/store\";\nimport {\n  Button,\n  Input,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./profile.module.css\";\nimport commonStyles from \"../common.module.css\";\n\nimport ProfileMenu from \"../../components/profile-menu/profile-menu\";\n\nimport { getUser } from \"../../services/actions/user\";\nimport { updateUser } from \"../../services/actions/user\";\nimport { TUser } from \"../../utils/types\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { data, updateUserError } = useSelector((state) => state.user);\n  const user = data as TUser;\n\n  const [formValue, setFormValue] = useState({\n    name: user?.name,\n    email: user?.email,\n    password: \"\",\n  });\n\n  useEffect(() => {\n    dispatch(getUser);\n  }, [dispatch]);\n\n  useEffect(() => {\n    setFormValue((prevState) => ({\n      ...prevState,\n      name: user?.name || \"\",\n      email: user?.email || \"\",\n    }));\n  }, [user]);\n\n  const isFormChanged =\n    formValue.name !== user?.name ||\n    formValue.email !== user?.email ||\n    formValue.password;\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    dispatch(updateUser(formValue)).then(() => {\n      if (!updateUserError) {\n        setFormValue({\n          name: user?.name,\n          email: user?.email,\n          password: \"\",\n        });\n      }\n    });\n  };\n\n  const handleCancel = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    setFormValue({\n      name: user?.name,\n      email: user?.email,\n      password: \"\",\n    });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValue((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <main className={`${commonStyles.container}`}>\n      <div className={`mt-30 mr-15 ${styles.menu}`}>\n        <ProfileMenu />\n      </div>\n      <form\n        className={`mt-30 ${styles.form} ${commonStyles.form}`}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"pb-6\">\n          <Input\n            type={\"text\"}\n            placeholder={\"Имя\"}\n            onChange={handleInputChange}\n            value={formValue.name}\n            name={\"name\"}\n            error={false}\n            errorText={\"\"}\n            size={\"default\"}\n            icon={\"EditIcon\"}\n          />\n        </div>\n        <div className=\"pb-6\">\n          <Input\n            type={\"email\"}\n            placeholder={\"E-mail\"}\n            onChange={handleInputChange}\n            value={formValue.email}\n            name={\"email\"}\n            error={false}\n            errorText={\"\"}\n            size={\"default\"}\n            icon={\"EditIcon\"}\n          />\n        </div>\n        <div className=\"pb-6\">\n          <Input\n            type={\"password\"}\n            placeholder={\"Пароль\"}\n            onChange={handleInputChange}\n            value={formValue.password}\n            name={\"password\"}\n            error={false}\n            errorText={\"\"}\n            size={\"default\"}\n            icon={\"EditIcon\"}\n          />\n        </div>\n        {isFormChanged && (\n          <div className={styles.button}>\n            <Button\n              type=\"secondary\"\n              htmlType=\"button\"\n              size=\"medium\"\n              onClick={handleCancel}\n            >\n              Отменить\n            </Button>\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\n              Сохранить\n            </Button>\n          </div>\n        )}\n        {updateUserError && (\n          <p\n            className={`${commonStyles.error} pt-5 text text_type_main-default`}\n          >\n            {updateUserError as string}\n          </p>\n        )}\n      </form>\n    </main>\n  );\n};\n\nexport default Profile;\n","const statusText: { [key: string]: string } = {\n  pending: \"Готовится\",\n  done: \"Выполнен\",\n  created: \"Создан\",\n};\n\ntype OrderStatusProps = {\n  status: string;\n};\n\nconst OrderStatus: React.FC<OrderStatusProps> = ({ status }) => {\n  let textStyle = \"\";\n  switch (status) {\n    case \"pending\":\n      textStyle = \"#E52B1A\";\n      break;\n    case \"done\":\n      textStyle = \"#00CCCC\";\n      break;\n    default:\n      textStyle = \"#F2F2F3\";\n  }\n\n  return (\n    <span\n      className=\"text text_type_main-default pt-2\"\n      style={{ color: textStyle }}\n    >\n      {statusText[status]}\n    </span>\n  );\n};\n\nexport default OrderStatus;\n","import { format, isToday, isYesterday, formatDistance } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\n\n/* Допускается использовать такое форматирование даты, не\nобязательно 100% совпадение с макетом */\nexport function formatPastTime(d: Date): string {\n  if (isToday(d)) {\n    return `Сегодня, ${format(d, \"kk:mm\", { locale: ru })}`;\n  }\n\n  if (isYesterday(d)) {\n    return `Вчера, ${format(d, \"kk:mm\", { locale: ru })}`;\n  }\n\n  return `${formatDistance(d, Date.now(), { locale: ru })} назад`;\n}\n","import React, { useMemo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./order-card.module.css\";\n\nimport OrderStatus from \"../order-status/order-status\";\nimport { TOrder, TIngredient } from \"../../utils/types\";\n\nimport { useSelector } from \"../../services/store\";\nimport { formatPastTime } from \"../../utils/date-format\";\n\ntype TOrderCardProps = {\n  order: TOrder;\n};\n\nconst OrderCard: React.FC<TOrderCardProps> = ({ order }) => {\n  const location = useLocation();\n  const maxIngredients = 6;\n\n  const ingredients = useSelector((state) => state.ingredients.data);\n\n  const orderInfo = useMemo(() => {\n    if (!ingredients.length) return null;\n\n    const ingredientsInfo = order.ingredients.reduce(\n      (acc: TIngredient[], item: string) => {\n        const ingredient = ingredients.find((ing) => ing._id === item);\n        if (ingredient) return [...acc, ingredient];\n        return acc;\n      },\n      []\n    );\n\n    const total = ingredientsInfo.reduce((acc, item) => {\n      return acc + item.price;\n    }, 0);\n\n    const ingredientsToShow = ingredientsInfo.slice(0, maxIngredients);\n\n    const remains =\n      ingredientsInfo.length > maxIngredients\n        ? ingredientsInfo.length - maxIngredients\n        : 0;\n\n    const date = formatPastTime(new Date(order.createdAt));\n    return {\n      ...order,\n      ingredientsInfo,\n      ingredientsToShow,\n      remains,\n      total,\n      date,\n    };\n  }, [order, ingredients]);\n\n  if (!orderInfo) return null;\n\n  return (\n    <Link\n      to={{\n        pathname: `${location.pathname}/${orderInfo.number}`,\n        state: { background: location },\n      }}\n      className={`p-6 mb-4 mr-2 ${styles.order}`}\n    >\n      <div className={styles.order_info}>\n        <span className={`text text_type_digits-default ${styles.number}`}>\n          #{String(orderInfo.number).padStart(6, \"0\")}\n        </span>\n        <span className=\"text text_type_main-default text_color_inactive\">\n          {orderInfo.date}\n        </span>\n      </div>\n      <h4 className={`pt-6 text text_type_main-medium ${styles.order_name}`}>\n        {orderInfo.name}\n      </h4>\n      {location.pathname === \"/profile/orders\" && (\n        <OrderStatus status={orderInfo.status} />\n      )}\n      <div className={`pt-6 ${styles.order_content}`}>\n        <ul className={styles.ingredients}>\n          {orderInfo.ingredientsToShow.map((ingredient, index) => {\n            let zIndex = maxIngredients - index;\n            let right = 20 * index;\n            return (\n              <li\n                className={styles.img_wrap}\n                style={{ zIndex: zIndex, right: right }}\n                key={index}\n              >\n                <img\n                  style={{\n                    opacity:\n                      orderInfo.remains && maxIngredients === index + 1\n                        ? \"0.5\"\n                        : \"1\",\n                  }}\n                  className={styles.img}\n                  src={ingredient.image_mobile}\n                  alt={ingredient.name}\n                />\n                {maxIngredients === index + 1 ? (\n                  <span\n                    className={`text text_type_digits-default ${styles.remains}`}\n                  >\n                    {orderInfo.remains > 0 ? `+${orderInfo.remains}` : null}\n                  </span>\n                ) : null}\n              </li>\n            );\n          })}\n        </ul>\n        <div>\n          <span\n            className={`text text_type_digits-default pr-1 ${styles.order_total}`}\n          >\n            {orderInfo.total}\n          </span>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default OrderCard;\n","import React from \"react\";\n\nimport styles from \"./orders-list.module.css\";\n\nimport OrderCard from \"../order-card/order-card\";\nimport { TOrder } from \"../../utils/types\";\n\ntype TOrdersListProps = {\n  orders: TOrder[];\n};\n\nconst OrdersList: React.FC<TOrdersListProps> = ({ orders }) => {\n  const orderByDate = orders.sort((a, b) => {\n    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n  });\n\n  return (\n    <div className={`${styles.content}`}>\n      {orderByDate.map((order) => {\n        return <OrderCard order={order} key={order._id} />;\n      })}\n    </div>\n  );\n};\n\nexport default OrdersList;\n","import { useEffect } from \"react\";\n\nimport styles from \"./profile-orders.module.css\";\n\nimport ProfileMenu from \"../../components/profile-menu/profile-menu\";\nimport OrdersList from \"../../components/orders-list/orders-list\";\n\nimport { BURGER_API_WSS_ORDERS } from \"../../utils/burger-api\";\nimport { useDispatch, useSelector } from \"../../services/store\";\nimport {\n  ORDERS_CONNECTION_INIT,\n  ORDERS_CONNECTION_CLOSE,\n} from \"../../services/actions/orders\";\nimport { getCookie } from \"../../utils/cookie\";\n\n\nconst ProfileOrder = () => {\n  const dispatch = useDispatch();\n  const orders = useSelector((state) => state.orders.data);\n\n  useEffect(() => {\n    const accessToken = getCookie(\"accessToken\");\n    if (!accessToken) {\n      return;\n    }\n\n    dispatch({\n      type: ORDERS_CONNECTION_INIT,\n      payload: `${BURGER_API_WSS_ORDERS}?token=${accessToken.replace(\n        \"Bearer \",\n        \"\"\n      )}`,\n    });\n\n    return () => {\n      dispatch({\n        type: ORDERS_CONNECTION_CLOSE,\n      });\n    };\n  }, [dispatch]);\n\n  return (\n    <main className={`${styles.main}`}>\n      <div className={`mt-30 mr-15 ${styles.menu}`}>\n        <ProfileMenu />\n      </div>\n      <div className={`mt-10 ${styles.orders}`}>\n        <OrdersList orders={orders} />\n      </div>\n    </main>\n  );\n};\n\nexport default ProfileOrder;\n","import { useSelector } from \"../../services/store\";\nimport { Redirect, Route, useLocation, RouteProps } from \"react-router\";\nimport { Location } from \"history\"\n\nimport Preloader from \"../preloader/preloader\";\n\n/*\n  Реализация ProtectedRoute может отличаться от приведенной\n  Вызов проверки авторизации размещен в App, но его и можно разместить и здесь\n  Так же вместо флага onlyUnAuth защиты страницы от авторизированного пользователся\n  допускается создавать два разных компонента ProtectedRoute\n\n  Главное, что бы работа авторизации соответствовала заданию\n*/\ntype ProtectedRouteProps = {\n  onlyUnAuth?: boolean;\n} & RouteProps;\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  onlyUnAuth = false,\n  children,\n  ...rest\n}) => {\n  const isAuthChecked = useSelector((state) => state.user.isAuthChecked);\n  const user = useSelector((state) => state.user.data);\n  const location = useLocation<{ from: Location}>();\n\n  if (!isAuthChecked) {\n    return <Preloader />;\n  }\n\n  if (onlyUnAuth && user) {\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n    return (\n      <Route {...rest}>\n        <Redirect to={from} />\n      </Route>\n    );\n  }\n\n  if (!onlyUnAuth && !user) {\n    return (\n      <Route {...rest}>\n        <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n      </Route>\n    );\n  }\n\n  return <Route {...rest}>{children}</Route>;\n};\n\nexport default ProtectedRoute;","import { useParams } from \"react-router\";\nimport { useSelector } from \"../../services/store\";\n\nimport styles from \"./ingredient-details.module.css\";\n\nimport Preloader from \"../preloader/preloader\";\n\nexport const IngredientDetails = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const ingredientData = useSelector((state) => {\n    return state.ingredients.data.find((item) => item._id === id);\n  });\n\n  if (!ingredientData) {\n    return <Preloader />;\n  }\n\n  const { name, image_large, calories, proteins, fat, carbohydrates } =\n    ingredientData;\n\n  return (\n    <div className={styles.content}>\n      <img\n        className={styles.img}\n        alt=\"изображение ингредиента.\"\n        src={image_large}\n      />\n      <h3 className=\"text text_type_main-medium mt-2 mb-4\">{name}</h3>\n      <p className=\"text text_type_main-default mb-4\"></p>\n      <ul className={`${styles.nutritional_values} text_type_main-default`}>\n        <li className={styles.nutritional_value}>\n          <p className={`text mb-2 ${styles.text}`}>Калории, ккал</p>\n          <p className={`text text_type_digits-default`}>{calories}</p>\n        </li>\n        <li className={styles.nutritional_value}>\n          <p className={`text mb-2 ${styles.text}`}>Белки, г</p>\n          <p className={`text text_type_digits-default`}>{proteins}</p>\n        </li>\n        <li className={styles.nutritional_value}>\n          <p className={`text mb-2 ${styles.text}`}>Жиры, г</p>\n          <p className={`text text_type_digits-default`}>{fat}</p>\n        </li>\n        <li className={styles.nutritional_value}>\n          <p className={`text mb-2 ${styles.text}`}>Углеводы, г</p>\n          <p className={`text text_type_digits-default`}>{carbohydrates}</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default IngredientDetails;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Input,\n  Button,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"../common.module.css\";\n\nimport { resetPassword as resetPasswordApi } from \"../../utils/burger-api\";\n\nconst ResetPassword = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState<Error | null>(null);\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    /*\n      Здесь допускается не использовать redux для\n      выполнения запроса\n    */\n    setError(null);\n    resetPasswordApi({ password, token })\n      .then(() => {\n        localStorage.removeItem(\"resetPassword\");\n        history.push(\"/login\");\n      })\n      .catch((err) => setError(err));\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"resetPassword\")) {\n      history.replace(\"/forgot-password\");\n    }\n  }, [history]);\n\n  return (\n    <main className={styles.container}>\n      <div className={`pt-6 ${styles.wrapCenter}`}>\n        <h3 className=\"pb-6 text text_type_main-medium\">\n          Восстановление пароля\n        </h3>\n        <form\n          className={`pb-15 ${styles.form}`}\n          name=\"login\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"pb-6\">\n            <PasswordInput\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              name=\"password\"\n            />\n          </div>\n          <div className=\"pb-6\">\n            <Input\n              type=\"text\"\n              placeholder=\"Введите код из письма\"\n              onChange={(e) => setToken(e.target.value)}\n              value={token}\n              name=\"token\"\n              error={false}\n              errorText=\"\"\n              size=\"default\"\n            />\n          </div>\n          <div className={`pb-6 ${styles.button}`}>\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\n              Сохранить\n            </Button>\n          </div>\n          {error && (\n            <p className={`${styles.error} text text_type_main-default pb-6`}>\n              {error}\n            </p>\n          )}\n        </form>\n        <div className={`${styles.question} text text_type_main-default pb-6`}>\n          Вспомнили пароль?\n          <Link to=\"/login\" className={`pl-2 ${styles.link}`}>\n            Войти\n          </Link>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default ResetPassword;\n","import { useEffect, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./order-info.module.css\";\n\nimport OrderStatus from \"../order-status/order-status\";\nimport Preloader from \"../preloader/preloader\";\n\nimport { TIngredient } from \"../../utils/types\";\nimport { formatPastTime } from \"../../utils/date-format\";\nimport { useSelector, useDispatch } from \"../../services/store\";\nimport { getOrderByNumber } from \"../../services/actions/order\";\n\nexport const OrderInfo = () => {\n  const { number } = useParams<{ number: string }>();\n  const dispatch = useDispatch();\n  const ingredients = useSelector((state) => state.ingredients.data);\n\n  /* Ищем в сторе данные открываемого заказа по его номеру, можно разместить поиск \n  здесь, но компонент OrderInfo будет более переиспользуемым, если данные \n  передавать в пропсы  */\n  const orderData = useSelector((state) => {\n    if (state.orders.isOpen && state.orders.data.length) {\n      const data = state.orders.data.find((item) => item.number === +number);\n      if (data) return data;\n    }\n\n    if (state.feed.isOpen && state.feed.orders.length) {\n      const data = state.feed.orders.find((item) => item.number === +number);\n      if (data) return data;\n    }\n\n    if (state.order.orderByNumber?.number === +number) {\n      return state.order.orderByNumber;\n    }\n\n    return null;\n  });\n\n  /* Если заказа в сторе нет, то запрашиваем его */\n  useEffect(() => {\n    if (!orderData) {\n      dispatch(getOrderByNumber(+number));\n    }\n  }, [dispatch, orderData, number]);\n\n  /* Готовим данные для отображения */\n  const orderInfo = useMemo(() => {\n    if (!orderData || !ingredients.length) return null;\n\n    const date = formatPastTime(new Date(orderData.createdAt));\n\n    type TIngredientsWithCount = {\n      [key: string]: TIngredient & { count: number };\n    };\n\n    const ingredientsInfo = orderData.ingredients.reduce(\n      (acc: TIngredientsWithCount, item) => {\n        if (!acc[item]) {\n          const ingredient = ingredients.find((ing) => ing._id === item);\n          if (ingredient) {\n            acc[item] = {\n              ...ingredient,\n              count: 1,\n            };\n          }\n        } else {\n          acc[item].count++;\n        }\n\n        return acc;\n      },\n      {}\n    );\n\n    const total = Object.values(ingredientsInfo).reduce(\n      (acc, item) => acc + item.price * item.count,\n      0\n    );\n\n    return {\n      ...orderData,\n      ingredientsInfo,\n      date,\n      total,\n    };\n  }, [orderData, ingredients]);\n\n  if (!orderInfo) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className={styles.wrap}>\n      <h3 className={`text text_type_main-medium  pb-3 pt-10 ${styles.header}`}>\n        {orderInfo.name}\n      </h3>\n      <OrderStatus status={orderInfo.status} />\n      <p className={`text text_type_main-medium pt-15 pb=6`}>Состав:</p>\n      <ul className={`${styles.list} mb-8`}>\n        {Object.values(orderInfo.ingredientsInfo).map((item, index) => {\n          return (\n            <li className={`pb-4 pr-6 ${styles.item}`} key={index}>\n              <div className={styles.img_wrap}>\n                <div className={styles.border}>\n                  <img\n                    className={styles.img}\n                    src={item.image_mobile}\n                    alt={item.name}\n                  />\n                </div>\n              </div>\n              <span className=\"text text_type_main-default pl-4\">\n                {item.name}\n              </span>\n              <span\n                className={`text text_type_digits-default pl-4 pr-4 ${styles.quantity}`}\n              >\n                {item.count} x {item.price}\n              </span>\n              <CurrencyIcon type={\"primary\"} />\n            </li>\n          );\n        })}\n      </ul>\n      <div className={styles.bottom}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          {orderInfo.date}\n        </p>\n        <span className={`text text_type_digits-default pr-4 ${styles.total}`}>\n          {orderInfo.total}\n        </span>\n        <CurrencyIcon type={\"primary\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default OrderInfo;\n","const NotFound404 = () => {\n  return (\n    <h3 className={`pb-6 text text_type_main-large`}>\n      Страница не найдена. Ошибка 404.\n    </h3>\n  );\n};\n\nexport default NotFound404;\n","import React from \"react\";\n\nimport styles from \"./feed-info.module.css\";\n\nimport { useSelector } from \"../../services/store\";\nimport { TOrder } from \"../../utils/types\";\n\ntype HalfColumnProps = {\n  orders: number[];\n  title: string;\n  textColor?: string;\n};\n\nconst HalfColumn: React.FC<HalfColumnProps> = ({\n  orders,\n  title,\n  textColor,\n}) => {\n  return (\n    <div className={`pr-6 ${styles.column}`}>\n      <h3 className={`text text_type_main-medium ${styles.title}`}>{title}:</h3>\n      <ul className={`pt-6  ${styles.list}`}>\n        {orders.map((item, index) => {\n          return (\n            <li\n              className={`text text_type_digits-default ${styles.list_item}`}\n              style={{ color: textColor === \"blue\" ? \"#00cccc\" : \"#F2F2F3\" }}\n              key={index}\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\ntype TColumnProps = {\n  title: string;\n  content: number;\n};\n\nconst Column: React.FC<TColumnProps> = ({ title, content }) => {\n  return (\n    <>\n      <h3 className={`pt-15 text text_type_main-medium ${styles.title}`}>\n        {title}:\n      </h3>\n      <p className={`text text_type_digits-large ${styles.content}`}>\n        {content}\n      </p>\n    </>\n  );\n};\n\nconst getOrders = (orders: TOrder[], status: string): number[] => {\n  return orders\n    .filter((item) => item.status === status)\n    .map((item) => item.number)\n    .slice(0, 20);\n};\n\nconst FeedInfo = () => {\n  const { total, totalToday } = useSelector((state) => state.feed);\n  const readyOrders = useSelector((state) =>\n    getOrders(state.feed.orders, \"done\")\n  );\n  const pendingOrders = useSelector((state) =>\n    getOrders(state.feed.orders, \"pending\")\n  );\n\n  return (\n    <section>\n      <div className={styles.columns}>\n        <HalfColumn orders={readyOrders} title={\"Готовы\"} textColor={\"blue\"} />\n        <HalfColumn orders={pendingOrders} title={\"В работе\"} />\n      </div>\n      <Column title={\"Выполнено за все время\"} content={total} />\n      <Column title={\"Выполнено за сегодня\"} content={totalToday} />\n    </section>\n  );\n};\n\nexport default FeedInfo;\n","import { useEffect } from \"react\";\n\nimport styles from \"./feed.module.css\";\n\nimport OrdersList from \"../../components/orders-list/orders-list\";\nimport FeedInfo from \"../../components/feed-info/feed-info\";\nimport Preloader from \"../../components/preloader/preloader\";\n\nimport { useDispatch, useSelector } from \"../../services/store\";\nimport {\n  FEED_CONNECTION_INIT,\n  FEED_CONNECTION_CLOSE,\n} from \"../../services/actions/feed\";\nimport { BURGER_API_WSS_FEED } from \"../../utils/burger-api\";\n\nconst Feed = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: FEED_CONNECTION_INIT,\n      payload: BURGER_API_WSS_FEED,\n    });\n\n    return () => {\n      dispatch({ type: FEED_CONNECTION_CLOSE });\n    };\n  }, [dispatch]);\n\n  const orders = useSelector((state) => state.feed.orders);\n\n  if (!orders.length) {\n    return (<Preloader />);\n  }\n\n  return (\n    <main className={styles.containerMain}>\n      <h1 className={`${styles.title} text text_type_main-large mt-10 mb-5`}>\n        Лента заказов\n      </h1>\n      <div className={styles.main}>\n        <div className={styles.columnOrders}>\n          <OrdersList orders={orders} />\n        </div>\n        <div className={styles.columnInfo}>\n          <FeedInfo />\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Feed;","import { useEffect } from \"react\";\nimport { useDispatch } from \"../../services/store\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router\";\nimport { Location } from \"history\";\n\nimport styles from \"./app.module.css\";\n\nimport AppHeader from \"../app-header/app-header\";\nimport Main from \"../../pages/main/main\";\nimport Register from \"../../pages/register/register\";\nimport Login from \"../../pages/login/login\";\nimport ForgotPassword from \"../../pages/forgot-password/forgot-password\";\nimport Profile from \"../../pages/profile/profile\";\nimport ProfileOrders from \"../../pages/profile-orders/profile-orders\";\nimport ProtectedRoute from \"../protected-route/protected-route\";\nimport Modal from \"../modal/modal\";\nimport IngredientsDetails from \"../ingredient-details/ingredient-details\";\nimport ResetPassword from \"../../pages/reset-password/reset-password\";\nimport OrderInfo from \"../order-info/order-info\";\nimport NotFound404 from \"../../pages/not-fount-404/not-fount-404\";\nimport Feed from \"../../pages/feed/feed\";\n\nimport { getIngredients } from \"../../services/actions/ingredients\";\nimport { checkUserAuth } from \"../../services/actions/user\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation<{ background: Location }>();\n\n  /* При обновлении страницы допускается, что бы остался отображаться открытый попап\n  а не открылась страница, дополнительные проверки тут не обязательно делать */\n  const background = location.state && location.state.background;\n\n  /* это нужно для отображения номера заказа в заголовке модального окна, \n  если оно открыто. Реализация этого может отличаться */\n  const orderNumber = useRouteMatch<{ number: string }>([\n    \"/profile/orders/:number\",\n    \"/feed/:number\",\n  ])?.params?.number;\n\n  const handleModalClose = () => history.goBack();\n\n  useEffect(() => {\n    dispatch(getIngredients());\n\n    /* checkUserAuth вызывает проверку авторизирован ли пользователь - \n    отправляет запрос за данными пользователя, если токен есть в хранилище \n    Вызов этой проверки может быть либо при монтировании App или в ProtectedRoute  */\n    dispatch(checkUserAuth());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.app}>\n      <AppHeader />\n      <Switch location={background || location}>\n        <ProtectedRoute path=\"/profile\" exact>\n          <Profile />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders\" exact>\n          <ProfileOrders />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders/:number\" exact>\n          <div className={styles.detailPageWrap}>\n            <p\n              className={`text text_type_digits-default ${styles.detailHeader}`}\n            >\n              #{orderNumber && orderNumber.padStart(6, \"0\")}\n            </p>\n            <OrderInfo />\n          </div>\n        </ProtectedRoute>\n        <ProtectedRoute onlyUnAuth={true} path=\"/register\" exact>\n          <Register />\n        </ProtectedRoute>\n        <ProtectedRoute onlyUnAuth={true} path=\"/login\" exact>\n          <Login />\n        </ProtectedRoute>\n        <ProtectedRoute onlyUnAuth={true} path=\"/forgot-password\" exact>\n          <ForgotPassword />\n        </ProtectedRoute>\n        <ProtectedRoute onlyUnAuth={true} path=\"/reset-password\" exact>\n          <ResetPassword />\n        </ProtectedRoute>\n        <Route path=\"/ingredients/:id\" exact>\n          <div className={styles.detailPageWrap}>\n            <p className={`text text_type_main-large ${styles.detailHeader}`}>\n              Детали ингредиента\n            </p>\n            <IngredientsDetails />\n          </div>\n        </Route>\n        <Route path=\"/feed\" exact>\n          <Feed />\n        </Route>\n        <Route path=\"/feed/:number\" exact>\n          <div className={styles.detailPageWrap}>\n            <p\n              className={`text text_type_digits-default ${styles.detailHeader}`}\n            >\n              #{orderNumber && orderNumber.padStart(6, \"0\")}\n            </p>\n            <OrderInfo />\n          </div>\n        </Route>\n        <Route path=\"/\" exact>\n          <Main />\n        </Route>\n        <Route>\n          <div className={styles.detailPageWrap}>\n            <NotFound404 />\n          </div>\n        </Route>\n      </Switch>\n      {background && (\n        <>\n          <Route path=\"/ingredients/:id\" exact>\n            <Modal onClose={handleModalClose} title=\"Детали ингредиента\">\n              <IngredientsDetails />\n            </Modal>\n          </Route>\n          <ProtectedRoute path=\"/profile/orders/:number\" exact>\n            <Modal\n              onClose={handleModalClose}\n              title={`#${orderNumber && orderNumber.padStart(6, \"0\")}`}\n            >\n              <OrderInfo />\n            </Modal>\n          </ProtectedRoute>\n          <Route path=\"/feed/:number\" exact>\n            <Modal\n              onClose={handleModalClose}\n              title={`#${orderNumber && orderNumber.padStart(6, \"0\")}`}\n            >\n              <OrderInfo />\n            </Modal>\n          </Route>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\nimport App from \"./components/app/app\";\nimport store from \"./services/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"menu\":\"app-header_menu__3SLom\",\"menu_part_left\":\"app-header_menu_part_left__2YXg6\",\"link\":\"app-header_link__2y8TU\",\"link_active\":\"app-header_link_active__vLEYL\",\"link_position_last\":\"app-header_link_position_last__3skWP\",\"logo\":\"app-header_logo__zVEfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredient-details_content__WdJuD\",\"nutritional_values\":\"ingredient-details_nutritional_values__3FKHu\",\"nutritional_value\":\"ingredient-details_nutritional_value__8pb6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"order-card_ingredients__20T5_\",\"order\":\"order-card_order__3rqYV\",\"order_info\":\"order-card_order_info__29lCi\",\"order_name\":\"order-card_order_name__3YBR3\",\"order_content\":\"order-card_order_content__34Qw-\",\"order_total\":\"order-card_order_total__1jVgt\",\"img_wrap\":\"order-card_img_wrap__1acsa\",\"img\":\"order-card_img__3_go7\",\"remains\":\"order-card_remains__8DEtg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"order-info_wrap__Gkezw\",\"number\":\"order-info_number__osrir\",\"status\":\"order-info_status__wcc9g\",\"header\":\"order-info_header__1sYHj\",\"img_wrap\":\"order-info_img_wrap__2AgMB\",\"border\":\"order-info_border__3fQfd\",\"img\":\"order-info_img__3xY-m\",\"item\":\"order-info_item__AxHy8\",\"quantity\":\"order-info_quantity__1fXgZ\",\"list\":\"order-info_list__3DYZ3\",\"bottom\":\"order-info_bottom__3Q0Uw\",\"total\":\"order-info_total__1krhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"detailPageWrap\":\"app_detailPageWrap__11w5w\",\"detailHeader\":\"app_detailHeader__1E_IA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"feed-info_columns__CzEBR\",\"column\":\"feed-info_column__J1dB_\",\"list\":\"feed-info_list__1JWvG\",\"title\":\"feed-info_title__WE0nW\",\"list_item\":\"feed-info_list_item__yrN7o\",\"content\":\"feed-info_content__3s65D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\",\"button\":\"modal_button__3_zvg\",\"img\":\"modal_img__3f0Go\",\"content\":\"modal_content__1tQ-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"profile-menu_link__1GXQJ\",\"activeLink\":\"profile-menu_activeLink__1Ahyy\",\"button\":\"profile-menu_button__10VBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMain\":\"feed_containerMain__3I4JH\",\"title\":\"feed_title__yRxeu\",\"main\":\"feed_main__3gURw\",\"columnOrders\":\"feed_columnOrders__TBoiM\",\"columnInfo\":\"feed_columnInfo__QUvCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"burger-ingredient_article__wQtAl\",\"cost\":\"burger-ingredient_cost__2ItX8\",\"text\":\"burger-ingredient_text__1IAaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMain\":\"main_containerMain__1lR2l\",\"title\":\"main_title__89vkE\",\"main\":\"main_main__tvROX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_ingredients\":\"burger-ingredients_burger_ingredients__3HExk\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"content\":\"burger-ingredients_content__1rMpp\",\"menu\":\"burger-ingredients_menu__3KO37\",\"categories\":\"burger-ingredients_categories__1eVbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"order-details_img__1gAbq\",\"title\":\"order-details_title__FoYOr\",\"text\":\"order-details_text__ZLZ7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"profile_menu__xxfx5\",\"form\":\"profile_form__3yKlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"profile-orders_menu__HR8A_\",\"main\":\"profile-orders_main__3CNRY\",\"orders\":\"profile-orders_orders__2ocR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"common_container__seYK4\",\"wrapCenter\":\"common_wrapCenter__2WDKE\",\"form\":\"common_form__2Qchh\",\"title\":\"common_title__1CsDV\",\"button\":\"common_button__2HgCs\",\"question\":\"common_question__lOmQ9\",\"link\":\"common_link__2bwt_\",\"error\":\"common_error__2wD2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"burger-constructor-element_element__3xJw4\",\"element_fullwidth\":\"burger-constructor-element_element_fullwidth__357JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__16lUt\",\"preloader_circle\":\"preloader_preloader_circle__1bfiA\",\"spin\":\"preloader_spin__IM9Nd\"};"],"sourceRoot":""}